basePath: /
definitions:
  base_info.Success:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      msg:
        example: err msg
        type: string
      reason:
        example: success
        type: string
    type: object
  base_info.Swagger400Resp:
    properties:
      code:
        example: 400
        type: integer
      msg:
        example: err msg
        type: string
      reason:
        example: err_reason
        type: string
    type: object
  base_info.Swagger401Resp:
    properties:
      code:
        example: 401
        type: integer
      msg:
        example: err msg
        type: string
      reason:
        example: err_reason
        type: string
    type: object
  base_info.Swagger500Resp:
    properties:
      code:
        example: 500
        type: integer
      msg:
        example: err msg
        type: string
      reason:
        example: err_reason
        type: string
    type: object
  command.ConditionConfig:
    properties:
      expression:
        description: 条件表达式
        type: string
      parameters:
        additionalProperties: true
        description: 条件参数
        type: object
      type:
        description: 条件类型
        type: string
    type: object
  command.CreateRuleCommand:
    properties:
      action:
        description: 触发动作：allow(允许) deny(拒绝) modify(修改) notify(通知) redirect(重定向)
        type: string
      categoryId:
        description: 分类ID
        type: string
      code:
        description: 规则编码
        type: string
      condition:
        allOf:
        - $ref: '#/definitions/command.ConditionConfig'
        description: 条件配置
      description:
        description: 规则描述
        type: string
      executionTiming:
        description: 执行时机：before(前置) after(后置) both(前后都执行)
        type: string
      formula:
        description: 计算公式
        type: string
      luaScript:
        description: Lua脚本
        type: string
      name:
        description: 规则名称
        type: string
      priority:
        description: 优先级
        type: integer
      scope:
        description: 作用域
        type: string
      scopeId:
        description: 作用域ID
        type: string
      sorting:
        description: 排序权重
        type: integer
      templateId:
        description: 模板ID
        type: string
      triggers:
        description: 触发条件
        items:
          type: string
        type: array
      type:
        description: 规则类型
        type: string
    type: object
  command.UpdateRuleCommand:
    properties:
      action:
        description: 触发动作：allow(允许) deny(拒绝) modify(修改) notify(通知) redirect(重定向)
        type: string
      categoryId:
        description: 分类ID
        type: string
      code:
        description: 规则编码
        type: string
      condition:
        allOf:
        - $ref: '#/definitions/command.ConditionConfig'
        description: 条件配置
      description:
        description: 规则描述
        type: string
      executionTiming:
        description: 执行时机：before(前置) after(后置) both(前后都执行)
        type: string
      formula:
        description: 计算公式
        type: string
      id:
        description: 规则ID
        type: string
      luaScript:
        description: Lua脚本
        type: string
      name:
        description: 规则名称
        type: string
      priority:
        description: 优先级
        type: integer
      scope:
        description: 作用域
        type: string
      scopeId:
        description: 作用域ID
        type: string
      sorting:
        description: 排序权重
        type: integer
      templateId:
        description: 模板ID
        type: string
      triggers:
        description: 触发条件
        items:
          type: string
        type: array
      type:
        description: 规则类型
        type: string
    type: object
  command.UpdateRuleStatusCommand:
    properties:
      id:
        description: 规则ID
        type: string
      status:
        description: 状态
        type: integer
    type: object
  dto.AddAnnouncementReq:
    properties:
      area:
        description: 地区
        type: string
      content:
        description: 公告内容
        type: string
      popUp:
        description: 是否弹出 1->是，2->否
        type: integer
      title:
        description: 标题
        type: string
    type: object
  dto.AddBankCardReq:
    properties:
      account:
        description: 账号
        type: string
      address:
        description: 地址
        type: string
      bank:
        description: 银行
        type: string
      bankAbbreviation:
        description: 银行简称
        type: string
      cardCode:
        description: 卡号
        type: string
      fullName:
        description: 真实姓名
        type: string
      phone:
        description: 银行预留手机号
        type: string
      qrCode:
        description: 收款码
        type: string
      type:
        description: 类型 默认1->银行卡,2:收款码,3:地址
        type: integer
      userId:
        description: 用户id
        type: string
    type: object
  dto.AddEventReq:
    properties:
      dis:
        description: 描述
        type: string
      name:
        description: 名称
        type: string
      topic:
        description: 主题
        type: string
    type: object
  dto.AddInformationReq:
    properties:
      cover:
        description: 封面
        type: string
      customId:
        description: 自定义id
        type: string
      dis:
        description: 描述
        items:
          type: string
        type: array
      link:
        description: 链接
        type: string
      name:
        description: 名称
        type: string
      price:
        description: 金额
        type: number
      sorting:
        description: 排序数字越大越靠前
        type: integer
    type: object
  dto.AddSubscribeReq:
    properties:
      dis:
        description: 描述
        type: string
      group:
        description: 订阅的组
        type: string
      name:
        description: 订阅名称
        type: string
      parameter:
        description: 参数
        items:
          $ref: '#/definitions/dto.SubscribeParameterModel'
        type: array
      topic:
        description: 订阅的主题
        type: string
    type: object
  dto.AddTask:
    properties:
      categoryId:
        description: 分类ID：任务所属的分类
        type: string
      conditions:
        description: 任务条件：完成条件列表
        items:
          $ref: '#/definitions/dto.TaskConditionItem'
        type: array
      description:
        description: 任务描述：详细说明任务内容
        type: string
      endTime:
        description: 结束时间：时间戳，0表示永不过期
        type: integer
      id:
        description: 任务ID：可选，允许指定ID
        type: string
      progressType:
        description: 用于标识进度来源
        type: string
      rebates:
        description: 任务返佣：返佣项列表
        items:
          $ref: '#/definitions/dto.TaskRebateItem'
        type: array
      rewardType:
        description: 奖励类型：1-自动发放 2-手动领取
        type: integer
      rewards:
        description: CompleteType int8                 `json:"completeType" binding:"completeType"`
          // 完成方式 1:手动完成 2:进度自动完成 3:可重复完成
        items:
          $ref: '#/definitions/dto.TaskRewardItem'
        type: array
      sort:
        description: 排序值：值越小越靠前
        type: integer
      startTime:
        description: 开始时间：时间戳，0表示立即开始
        type: integer
      taskType:
        description: 任务类型：1-普通任务 2-立即触发任务
        type: integer
      title:
        description: 任务标题：任务的显示名称
        type: string
    required:
    - categoryId
    - rewardType
    - taskType
    - title
    type: object
  dto.AddTaskCategory:
    properties:
      completionType:
        description: 完成类型
        type: integer
      description:
        description: 分类描述
        type: string
      icon:
        type: string
      id:
        description: 分类ID,允许指定
        type: string
      name:
        description: 分类名称
        type: string
      progressType:
        description: 进度类型
        type: string
      resetDays:
        description: 重置天数
        type: integer
      resetType:
        description: 重置类型
        type: integer
      sort:
        type: integer
      status:
        description: 状态
        type: integer
    type: object
  dto.AddWalletTypeReq:
    properties:
      feeRate:
        type: number
      id:
        type: integer
      localeKey:
        type: string
      maxAmount:
        type: number
      maxFee:
        type: number
      maxWithdrawals:
        type: integer
      minAmount:
        type: number
      minFee:
        type: number
      needPassword:
        type: integer
      needReal:
        type: integer
      remark:
        type: string
      status:
        type: integer
      tenantId:
        type: string
      typeName:
        type: string
      valuePerShare:
        type: number
      withdrawConditions:
        items:
          $ref: '#/definitions/dto.WithdrawConditionGroupRequest'
        type: array
    required:
    - feeRate
    - id
    - localeKey
    - maxAmount
    - maxFee
    - maxWithdrawals
    - minAmount
    - minFee
    - needPassword
    - needReal
    - remark
    - status
    - tenantId
    - typeName
    - valuePerShare
    type: object
  dto.AddressResp:
    properties:
      address:
        description: 详细地址
        type: string
      city:
        description: 城市
        type: string
      created_at:
        description: 创建时间
        type: integer
      district:
        description: 区县
        type: string
      id:
        description: 地址ID
        type: string
      is_default:
        description: 是否默认地址
        type: boolean
      name:
        description: 收货人姓名
        type: string
      phone:
        description: 联系电话
        type: string
      postal_code:
        description: 邮政编码
        type: string
      province:
        description: 省份
        type: string
      updated_at:
        description: 更新时间
        type: integer
      user_id:
        description: 用户ID
        type: string
    type: object
  dto.AnnouncementModel:
    properties:
      area:
        description: 地区
        type: string
      areaI18n:
        description: 地区国际化
        type: string
      areaLabel:
        description: 地区
        type: string
      content:
        description: 公告内容
        type: string
      createdAt:
        type: integer
      deletedAt:
        type: integer
      fileName:
        description: 文件名
        type: string
      id:
        type: string
      popUp:
        description: 是否弹出 1->是，2->否
        type: integer
      status:
        description: 公告状态 1->新增，2->发布，3->关闭
        type: integer
      title:
        description: 标题
        type: string
      updatedAt:
        type: integer
      url:
        description: 地址
        type: string
    type: object
  dto.Category:
    properties:
      createdAt:
        type: integer
      creator:
        type: string
      deletedAt:
        type: integer
      description:
        type: string
      i18n_key:
        description: 国际化key
        type: string
      id:
        type: string
      name:
        type: string
      tenantId:
        type: string
      updatedAt:
        type: integer
      updater:
        type: string
    type: object
  dto.CategoryCreateReq:
    properties:
      description:
        type: string
      i18n_key:
        description: 国际化key
        type: string
      id:
        type: string
      name:
        type: string
    required:
    - id
    - name
    type: object
  dto.CategoryUpdateReq:
    properties:
      description:
        type: string
      i18n_key:
        description: 国际化key
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  dto.ChangeWalletStatusReq:
    properties:
      accountType:
        description: 账户类型
        type: integer
      id:
        description: 钱包id
        type: string
      status:
        description: 账户状态 1->激活, 2->冻结
        type: integer
      userId:
        description: 用户id
        type: string
    type: object
  dto.ConfirmExchangeOrderReq:
    properties:
      id:
        description: 订单id
        type: string
      remark:
        description: 备注
        type: string
      shipping_company:
        description: 物流公司
        type: string
      tracking_no:
        description: 物流单号
        type: string
    type: object
  dto.ConfirmRechargeOrderReq:
    properties:
      actual_amount:
        description: 实际支付金额
        type: number
      id:
        description: 订单id
        type: string
      remark:
        description: 备注
        type: string
    type: object
  dto.CreateCategoryReq:
    properties:
      area:
        description: 地区代码，选填
        type: string
      dis:
        description: 分类描述，选填
        type: string
      id:
        description: 分类ID，必填
        type: string
      name:
        description: 分类名称，必填
        type: string
      template_id:
        description: 属性模板ID，选填
        type: string
      type:
        description: 商品类型 1:充值 2:兑换 3:抽奖 4:投资理财
        type: integer
    type: object
  dto.CreateNewsCategoryRequest:
    properties:
      area:
        type: string
      dis:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        type: integer
    required:
    - area
    - id
    - name
    type: object
  dto.CreateNewsRequest:
    properties:
      classId:
        type: string
      content:
        type: string
      cover:
        type: string
      introduction:
        type: string
      sorting:
        type: integer
      title:
        type: string
    required:
    - classId
    - content
    - title
    type: object
  dto.CreateProductReq:
    properties:
      area:
        description: 基础信息
        type: string
      attributes:
        additionalProperties:
          type: string
        description: 其他属性
        type: object
      category_id:
        description: 分类ID
        type: string
      description:
        description: 产品详细描述
        type: string
      expected_rate:
        description: 预期收益率
        type: number
      features:
        description: 产品特点
        type: string
      finance_settlement_type:
        description: 结算方式配置
        type: integer
      fixed_price:
        description: 是否固定价格
        type: boolean
      images:
        description: 图片列表URL
        items:
          type: string
        type: array
      investment_period:
        description: 投资理财配置
        type: integer
      is_physical:
        description: 是否实物奖品
        type: boolean
      is_thanks:
        description: 是否谢谢参与(未中奖)
        type: boolean
      limit_by_total:
        description: 是否受总数量限制
        type: boolean
      lottery_weight:
        description: 抽奖配置
        type: integer
      main_image:
        description: 主图URL
        type: string
      max_number:
        description: 最大购买数量
        type: integer
      max_price:
        description: 最高价格
        type: number
      min_number:
        description: 数量限制
        type: integer
      min_price:
        description: 最低价格
        type: number
      name:
        description: 产品名称
        type: string
      need_confirmation:
        description: 是否需要确认
        type: integer
      payment_method_id:
        description: 支付与收益
        type: integer
      person_limit:
        description: 个人限购数量
        type: integer
      price:
        description: 固定价格
        type: number
      principal_deduction:
        description: 提前赎回本金扣除比例
        type: number
      profit_wallet:
        description: 收益钱包ID
        type: integer
      restriction_type:
        description: 限制类型
        type: integer
      return_principal:
        description: 是否返本
        type: boolean
      return_principal_wallet:
        description: 返本钱包ID
        type: integer
      reward_amount:
        description: 奖励金额（元）
        type: number
      sales_start_time:
        description: 销售开始时间
        type: integer
      settlement_amount:
        description: 固定结算金额
        type: number
      settlement_cycle:
        description: 结算周期
        type: integer
      settlement_days:
        description: 自定义结算天数
        type: integer
      settlement_delay:
        description: 结算延迟天数
        type: integer
      settlement_ratio:
        description: 结算比例
        type: number
      settlement_start_day:
        description: 结算开始日
        type: integer
      settlement_time:
        description: 结算时间
        type: integer
      sorting:
        description: 排序与价格
        type: integer
      total_quantity:
        description: 商品总数量
        type: integer
      workday_only:
        description: 结算时间配置
        type: boolean
    required:
    - area
    - category_id
    - description
    - main_image
    - max_number
    - min_number
    - name
    - need_confirmation
    - payment_method_id
    - profit_wallet
    type: object
  dto.CreateProductRewardReq:
    properties:
      amount:
        description: 奖励金额
        type: number
      calc_type:
        description: 计算方式
        type: string
      category_id:
        description: 关联的分类ID
        type: string
      description:
        description: 奖励规则说明
        type: string
      formula:
        description: 公式计算
        type: string
      formula_vars:
        description: 公式变量映射
        type: string
      funding_type:
        description: 资金类型
        type: integer
      lua_script:
        description: Lua脚本
        type: string
      lua_vars:
        description: Lua脚本变量映射
        type: string
      name:
        description: 奖励规则名称
        type: string
      product_id:
        description: 关联的产品ID
        type: string
      source:
        description: 金额来源
        type: string
      source_id:
        description: 来源ID
        type: string
      trigger:
        description: 触发动作
        type: string
      wallet_id:
        description: 奖励发放配置
        type: integer
    required:
    - calc_type
    - funding_type
    - name
    - trigger
    - wallet_id
    type: object
  dto.CreateRebateReq:
    properties:
      amount:
        description: 返佣金额
        type: number
      calc_type:
        description: 计算方式
        type: string
      category_id:
        description: 分类ID
        type: string
      description:
        description: 返佣规则说明
        type: string
      formula:
        description: 计算公式
        type: string
      formula_vars:
        description: 公式变量映射
        items:
          $ref: '#/definitions/dto.FormulaVariable'
        type: array
      funding_type:
        description: 资金类型
        type: integer
      lua_script:
        description: Lua脚本代码
        type: string
      lua_vars:
        description: Lua脚本变量映射
        type: string
      name:
        description: 返佣名称
        type: string
      product_id:
        description: 产品ID
        type: string
      rates:
        description: 返佣比例配置
        items:
          $ref: '#/definitions/dto.RebateRate'
        type: array
      source:
        description: 金额来源
        type: string
      source_id:
        description: 来源ID
        type: string
      trigger:
        description: 触发动作
        type: string
      wallet_id:
        description: 钱包ID
        type: integer
    required:
    - calc_type
    - category_id
    - funding_type
    - name
    - product_id
    - rates
    - source
    - trigger
    - wallet_id
    type: object
  dto.CreateTask:
    properties:
      args:
        description: 任务参数，使用--key=value格式
        type: string
      cron:
        description: cron表达式
        type: string
      groupName:
        description: 分组ID
        type: string
      handler:
        description: 任务处理器名称
        type: string
      name:
        description: 任务名称
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 状态 2:停止 1:运行
        type: integer
    type: object
  dto.DeadLetterSubscribeModel:
    properties:
      createdAt:
        type: integer
      deletedAt:
        type: integer
      group:
        description: 订阅的组
        type: string
      id:
        description: ID
        type: string
      name:
        description: 订阅名称
        type: string
      status:
        description: 状态
        type: integer
      topic:
        description: 订阅的主题
        type: string
      updatedAt:
        type: integer
    type: object
  dto.EnableReq:
    properties:
      id:
        type: string
      ignoring_history:
        description: 是否忽略历史 1->或略, 2->不忽略
        type: integer
    type: object
  dto.EventModel:
    properties:
      createdAt:
        description: 创建时间
        type: integer
      dis:
        description: 描述
        type: string
      id:
        description: ID
        type: string
      name:
        description: 名称
        type: string
      status:
        description: 状态
        type: integer
      topic:
        description: 主题
        type: string
      updatedAt:
        description: 更新时间
        type: integer
    type: object
  dto.FormulaVariable:
    properties:
      description:
        description: 变量说明
        type: string
      name:
        description: 变量名称
        type: string
      source:
        description: 数据来源
        type: string
      source_id:
        description: 来源ID
        type: string
    type: object
  dto.HandleUserWalletReq:
    properties:
      handleType:
        description: 处理方式 处理方式 1->待处理,2->拒绝,3->同意
        type: integer
      remark:
        description: 处理意见
        type: string
      requestID:
        description: 申请ID
        type: string
    type: object
  dto.InformationModel:
    properties:
      cover:
        description: 封面
        type: string
      createdAt:
        type: integer
      customId:
        description: 自定义id
        type: string
      deletedAt:
        type: integer
      dis:
        description: 描述
        items:
          type: string
        type: array
      id:
        type: string
      link:
        description: 链接
        type: string
      name:
        description: 名称
        type: string
      price:
        description: 金额
        type: number
      sorting:
        description: 排序数字越大越靠前
        type: integer
      updatedAt:
        type: integer
    type: object
  dto.ListCategoryResp:
    properties:
      list:
        description: 分类列表数据
        items:
          $ref: '#/definitions/github_com_secret-pr_go-server-template_internal_product_dto.CategoryDTO'
        type: array
      total:
        description: 总记录数
        type: integer
    type: object
  dto.ListRebateResp:
    properties:
      items:
        description: 返佣配置列表
        items:
          $ref: '#/definitions/dto.RebateDTO'
        type: array
      total:
        description: 总数
        type: integer
    type: object
  dto.LotteryRecordDTO:
    properties:
      address:
        description: 收货地址（实物奖品）
        type: string
      consignee:
        description: 收货人姓名（实物奖品）
        type: string
      createdAt:
        description: 创建时间（时间戳）
        type: integer
      id:
        description: 抽奖记录ID
        type: string
      isPhysical:
        description: 是否实物奖品（true:实物奖品, false:虚拟奖品）
        type: boolean
      phone:
        description: 收货人电话（实物奖品）
        type: string
      prizeId:
        description: 奖品ID
        type: string
      prizeName:
        description: 奖品名称
        type: string
      remark:
        description: 备注信息
        type: string
      status:
        description: 发货状态（0:未发货, 1:已发货, 2:已签收）
        type: integer
      updatedAt:
        description: 更新时间（时间戳）
        type: integer
      userId:
        description: 用户ID
        type: string
    type: object
  dto.NewsDTO:
    properties:
      area:
        type: string
      classId:
        type: string
      content:
        type: string
      cover:
        type: string
      createdAt:
        type: integer
      fileName:
        type: string
      id:
        type: string
      introduction:
        type: string
      sorting:
        type: integer
      status:
        type: integer
      tenantId:
        type: string
      title:
        type: string
      updatedAt:
        type: integer
      url:
        type: string
    type: object
  dto.ObtainPaymentLog:
    properties:
      amount:
        description: 金额
        type: number
      changesMoney:
        description: 变动后金额
        type: string
      createTime:
        type: integer
      createdAt:
        description: 创建时间
        type: integer
      deletedAt:
        type: integer
      id:
        type: string
      logsType:
        description: 变动类型
        type: integer
      money:
        description: 变动金额
        type: string
      originalMoney:
        description: 变动钱金额
        type: string
      remark:
        description: 备注
        type: string
      sourceID:
        description: 来源id
        type: string
      sourceName:
        description: 来源名称
        type: string
      sourceRemark:
        description: 来源备注
        type: string
      sourceType:
        description: 来源类型
        type: string
      sourceUserID:
        description: 来源用户ID
        type: string
      updatedAt:
        type: integer
      userID:
        type: string
    type: object
  dto.Option:
    properties:
      category_id:
        description: 分类ID
        type: string
      createdAt:
        type: integer
      creator:
        type: string
      deletedAt:
        type: integer
      i18n_key:
        description: 国际化key
        type: string
      id:
        description: 选项ID
        type: string
      label:
        description: 默认名称
        type: string
      remark:
        description: 备注
        type: string
      sort:
        description: 排序号
        type: integer
      status:
        description: 状态:1-启用,0-禁用
        type: integer
      tenantId:
        type: string
      updatedAt:
        type: integer
      updater:
        type: string
      value:
        description: 选项值
        type: string
    type: object
  dto.OptionCreateReq:
    properties:
      category_id:
        type: string
      i18n_key:
        description: 国际化key
        type: string
      label:
        description: 默认名称
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        type: integer
      value:
        type: string
    required:
    - category_id
    - value
    type: object
  dto.OptionUpdateReq:
    properties:
      i18n_key:
        description: 国际化key
        type: string
      id:
        type: string
      label:
        description: 默认名称
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        type: integer
      value:
        type: string
    type: object
  dto.OrderDTO:
    properties:
      actual_amount:
        description: 实际支付金额(元)
        type: number
      cancel_time:
        description: 取消时间
        type: integer
      channel_id:
        description: 支付通道ID
        type: string
      complete_time:
        description: 完成时间
        type: integer
      created_at:
        description: 创建时间
        type: integer
      currency:
        description: 货币类型
        type: string
      custom_data:
        additionalProperties: true
        description: 自定义扩展数据
        type: object
      extend_data:
        additionalProperties: true
        description: 扩展数据
        type: object
      id:
        description: 订单ID
        type: string
      merchant_id:
        description: 商户ID
        type: string
      need_confirmation:
        description: 是否需要手动确认
        type: integer
      order_no:
        description: 订单编号
        type: string
      pay_amount:
        description: 需要支付金额(元)
        type: number
      pay_method:
        description: 支付方式
        type: integer
      pay_order_no:
        description: 支付相关
        type: string
      pay_time:
        description: 支付时间
        type: integer
      product_id:
        description: 产品ID
        type: string
      product_name:
        description: 产品名称
        type: string
      quantity:
        description: 数量
        type: integer
      remark:
        description: 备注
        type: string
      source_remark:
        description: 来源备注
        type: string
      source_user_id:
        description: 来源用户ID
        type: string
      status:
        allOf:
        - $ref: '#/definitions/model.OrderStatus'
        description: 订单状态
      total_amount:
        description: 订单金额
        type: number
      transaction_id:
        description: 第三方交易号
        type: string
      type:
        allOf:
        - $ref: '#/definitions/model.OrderType'
        description: 订单类型
      updated_at:
        description: 更新时间
        type: integer
      user_account:
        description: 用户账号
        type: string
      user_id:
        description: 用户ID
        type: string
      wallet_id:
        description: 钱包ID
        type: integer
    type: object
  dto.ProductDTO:
    properties:
      area:
        description: 地区编码
        type: string
      area_i18n:
        description: 地区国际化键
        type: string
      area_label:
        description: 地区显示名称
        type: string
      attributes:
        additionalProperties:
          type: string
        description: 其他属性
        type: object
      category_id:
        description: 分类ID
        type: string
      created_at:
        description: 时间信息
        type: integer
      description:
        description: 产品详细描述
        type: string
      expected_rate:
        description: 预期收益率
        type: number
      features:
        description: 产品特点，JSON格式
        type: string
      finance_settlement_type:
        description: 结算方式配置
        type: integer
      fixed_price:
        description: 是否固定价格
        type: boolean
      id:
        description: 基础信息
        type: string
      images:
        description: 图片列表URL
        items:
          type: string
        type: array
      investment_period:
        description: 投资理财配置
        type: integer
      is_physical:
        description: 是否实物奖品
        type: boolean
      is_thanks:
        description: 是否谢谢参与(未中奖)
        type: boolean
      limit_by_total:
        description: 是否受总数量限制
        type: boolean
      lottery_weight:
        description: 抽奖配置
        type: integer
      main_image:
        description: 图片信息
        type: string
      max_number:
        description: 最大购买数量
        type: integer
      max_price:
        description: 最高价格，单位：元
        type: number
      min_number:
        description: 数量限制
        type: integer
      min_price:
        description: 最低价格，单位：元
        type: number
      name:
        description: 产品名称
        type: string
      need_confirmation:
        description: 是否需要确认 1:是 2:否
        type: integer
      payment_method_id:
        description: 支付与收益
        type: integer
      person_limit:
        description: 个人限购数量
        type: integer
      price:
        description: 固定价格，单位：元
        type: number
      principal_deduction:
        description: 提前赎回本金扣除比例
        type: number
      profit_wallet:
        description: 收益钱包ID
        type: integer
      restriction_type:
        description: 限制类型
        type: integer
      return_principal:
        description: 是否返本
        type: boolean
      return_principal_wallet:
        description: 返本钱包ID
        type: integer
      reward_amount:
        description: 奖励金额（元）
        type: number
      sales_start_time:
        description: 销售开始时间
        type: integer
      sales_volume:
        description: 销售量
        type: integer
      settlement_amount:
        description: 固定结算金额，单位：元
        type: number
      settlement_cycle:
        description: 结算周期 1:天 2:周 3:月 4:年 5:自定义天数
        type: integer
      settlement_days:
        description: 自定义结算天数
        type: integer
      settlement_delay:
        description: 结算延迟天数
        type: integer
      settlement_ratio:
        description: 结算比例
        type: number
      settlement_start_day:
        description: 结算开始日 1:当天 2:次日
        type: integer
      settlement_time:
        description: 结算时间，24小时制
        type: integer
      sorting:
        description: 排序与价格
        type: integer
      status:
        description: 状态信息
        type: integer
      total_quantity:
        description: 商品总数量
        type: integer
      type:
        description: 商品类型：1-充值 2-兑换 3-抽奖 4-投资理财
        type: integer
      updated_at:
        description: 更新时间戳
        type: integer
      workday_only:
        description: 结算时间配置
        type: boolean
    type: object
  dto.ProductRewardDTO:
    properties:
      amount:
        description: 奖励金额 (当Source为custom时使用)
        type: number
      calc_type:
        description: 计算方式：direct-直接使用来源金额 formula-公式计算 lua-Lua脚本计算
        type: string
      category_id:
        description: 关联的分类ID
        type: string
      description:
        description: 奖励规则说明
        type: string
      formula:
        description: 公式计算：当CalcType为formula时使用
        type: string
      formula_vars:
        description: 公式变量映射
        type: string
      funding_type:
        description: 资金类型
        type: integer
      id:
        description: 奖励规则唯一标识
        type: string
      lua_script:
        description: Lua脚本：当CalcType为lua时使用
        type: string
      lua_vars:
        description: Lua脚本变量映射
        type: string
      name:
        description: 奖励规则名称
        type: string
      product_id:
        description: 关联的产品ID
        type: string
      source:
        description: 金额来源（product 商品基本属性/extend 商品扩展属性/order_total 订单总金额/order_paid
          订单实际支付金额/custom用户自定义金额）
        type: string
      source_id:
        description: 来源ID (当Source为product/extend时使用)
        type: string
      status:
        description: 状态控制
        type: integer
      trigger:
        description: 触发动作
        type: string
      wallet_id:
        description: 奖励发放配置
        type: integer
    type: object
  dto.ProductRuleDTO:
    properties:
      action:
        description: 触发动作(allow:允许 deny:拒绝 modify:修改 notify:通知 redirect:重定向)
        type: string
      action_params:
        description: 动作参数(JSON格式)
        type: string
      category_id:
        description: 分类ID
        type: string
      conditions:
        description: 条件表达式(JSON格式)
        type: string
      created_at:
        description: 创建时间
        type: integer
      description:
        description: 规则描述
        type: string
      id:
        description: 规则ID
        type: string
      lua_script:
        description: Lua脚本
        type: string
      name:
        description: 规则名称
        type: string
      priority:
        description: 优先级,数字越大优先级越高
        type: integer
      product_id:
        description: 产品ID
        type: string
      scope:
        description: 规则作用域(product:商品级规则 category:分类级规则)
        type: string
      status:
        description: 状态(1:启用 2:禁用)
        type: integer
      tenant_id:
        description: 租户ID
        type: string
      type:
        description: 规则类型(condition:普通条件规则 lua:Lua脚本规则)
        type: string
      updated_at:
        description: 更新时间
        type: integer
    type: object
  dto.RebateDTO:
    properties:
      amount:
        description: 奖励金额 (当Source为custom时使用)
        type: number
      calc_type:
        description: 计算方式：direct-直接使用来源金额 formula-公式计算 lua-Lua脚本计算
        type: string
      category_id:
        description: 关联的分类ID
        type: string
      created_at:
        description: 时间信息
        type: integer
      description:
        description: 返佣规则详细说明
        type: string
      formula:
        description: 公式计算
        type: string
      formula_vars:
        description: 公式变量映射
        items:
          $ref: '#/definitions/dto.FormulaVariable'
        type: array
      funding_type:
        description: 资金类型
        type: integer
      id:
        description: 返佣规则唯一标识
        type: string
      lua_script:
        description: Lua脚本
        type: string
      lua_vars:
        description: Lua脚本变量映射
        type: string
      name:
        description: 返佣规则名称
        type: string
      product_id:
        description: 关联的产品ID
        type: string
      rates:
        description: 返佣比例配置
        items:
          $ref: '#/definitions/dto.RebateRate'
        type: array
      source:
        description: 金额来源（product 商品基本属性/extend 商品扩展属性/order_total 订单总金额/order_paid
          订单实际支付金额/custom用户自定义金额）
        type: string
      source_id:
        description: 来源ID (当Source为product/extend时使用)
        type: string
      status:
        description: 状态控制
        type: integer
      trigger:
        description: 触发动作
        type: string
      updated_at:
        description: 更新时间
        type: integer
      wallet_id:
        description: 返佣发放配置
        type: integer
    type: object
  dto.RebateRate:
    properties:
      level:
        description: 返佣层级
        type: integer
      max:
        description: 最大返佣金额
        type: number
      min:
        description: 最小返佣金额
        type: number
      rate:
        description: 返佣比例
        type: number
    type: object
  dto.RebateSummary:
    properties:
      amount:
        description: 返佣金额
        type: number
      base_amount:
        description: 基础金额
        type: number
      funding_type:
        description: 资金类型
        type: integer
      level:
        description: 推荐级别
        type: integer
      rate:
        description: 返佣比例
        type: number
      type:
        description: 返佣类型
        type: string
      user_id:
        description: 用户ID
        type: string
      wallet_id:
        description: 钱包ID
        type: integer
    type: object
  dto.RebateSummaryDTO:
    properties:
      amount:
        description: 返佣金额
        type: number
      base_amount:
        description: 基础金额
        type: number
      funding_type:
        description: 资金类型
        type: integer
      level:
        description: 推荐级别
        type: integer
      rate:
        description: 返佣比例
        type: number
      type:
        description: 返佣类型
        type: string
      user_id:
        description: 用户ID
        type: string
      wallet_id:
        description: 钱包ID
        type: integer
    type: object
  dto.RefundOrderReq:
    properties:
      amount:
        type: number
      order_no:
        type: string
      remark:
        type: string
    type: object
  dto.RuleDTO:
    properties:
      action:
        description: 触发动作：allow(允许) deny(拒绝) modify(修改) notify(通知) redirect(重定向)
        type: string
      categoryId:
        description: 分类ID
        type: string
      code:
        description: 规则编码
        type: string
      condition:
        allOf:
        - $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto.ConditionDTO'
        description: 条件配置
      createdAt:
        description: 创建时间
        type: integer
      description:
        description: 规则描述
        type: string
      executionTiming:
        description: 执行时机：before(前置) after(后置) both(前后都执行)
        type: string
      formula:
        description: 计算公式
        type: string
      id:
        description: 规则ID
        type: string
      luaScript:
        description: Lua脚本
        type: string
      name:
        description: 规则名称
        type: string
      priority:
        description: 优先级
        type: integer
      scope:
        description: 作用域
        type: string
      scopeId:
        description: 作用域ID（商品ID、用户ID、订单ID等）
        type: string
      sorting:
        description: 排序权重
        type: integer
      status:
        description: 状态
        type: integer
      templateId:
        description: 模板ID
        type: string
      tenantId:
        description: 租户ID
        type: string
      triggers:
        description: 触发条件
        items:
          type: string
        type: array
      type:
        description: 规则类型
        type: string
      updatedAt:
        description: 更新时间
        type: integer
    type: object
  dto.RuleExecuteInput:
    properties:
      category_id:
        type: string
      context:
        additionalProperties: true
        type: object
      product_id:
        type: string
      rule_type:
        type: string
      user_id:
        type: string
    type: object
  dto.RuleExecutionDTO:
    properties:
      created_at:
        description: 创建时间
        type: integer
      execute_time:
        description: 执行时间(ms)
        type: integer
      id:
        description: 执行记录ID
        type: string
      input:
        description: 输入参数(JSON格式)
        type: string
      output:
        description: 输出结果(JSON格式)
        type: string
      rule_id:
        description: 规则ID
        type: string
      status:
        description: 执行状态(1:成功 2:失败)
        type: integer
      tenant_id:
        description: 租户ID
        type: string
      updated_at:
        description: 更新时间
        type: integer
    type: object
  dto.RuleTemplateDTO:
    properties:
      action:
        description: 触发动作(allow:允许 deny:拒绝 modify:修改 notify:通知 redirect:重定向)
        type: string
      action_params:
        additionalProperties: true
        description: 动作参数
        type: object
      conditions:
        additionalProperties: true
        description: 条件表达式
        type: object
      created_at:
        description: 创建时间
        type: integer
      description:
        description: 模板描述
        type: string
      id:
        description: 模板ID
        type: string
      lua_script:
        description: Lua脚本
        type: string
      name:
        description: 模板名称
        type: string
      priority:
        description: 优先级,数字越大优先级越高
        type: integer
      scope:
        description: 规则作用域(product:商品级规则 category:分类级规则)
        type: string
      status:
        description: 状态(1:启用 2:禁用)
        type: integer
      tenant_id:
        description: 租户ID
        type: string
      type:
        description: 规则类型(condition:普通条件规则 lua:Lua脚本规则)
        type: string
      updated_at:
        description: 更新时间
        type: integer
    type: object
  dto.RuleValidateInput:
    properties:
      category_id:
        description: 分类ID
        type: string
      context:
        additionalProperties: true
        description: 上下文数据
        type: object
      product_id:
        description: 产品ID
        type: string
      rule_type:
        description: 规则类型(condition:普通条件规则 lua:Lua脚本规则)
        type: string
      user_id:
        description: 用户ID
        type: string
    type: object
  dto.RuleValidateResult:
    properties:
      action:
        description: 执行动作(allow:允许 deny:拒绝 modify:修改 notify:通知 redirect:重定向)
        type: string
      action_params:
        description: 动作参数
      error_message:
        description: 错误信息
        type: string
      valid:
        description: 是否验证通过
        type: boolean
    type: object
  dto.SignConfigInfo:
    properties:
      continuous_rewards:
        description: 连续签到奖励
        items:
          $ref: '#/definitions/dto.SignRewardInfo'
        type: array
      continuous_type:
        description: 连续签到类型(1:断了就重置 2:周期内连续)
        type: integer
      daily_limit:
        description: 每日签到次数限制，最小为1
        type: integer
      description:
        description: 签到说明文案(支持HTML格式)
        type: string
      enable_time_end:
        description: 每日可签到结束时间(格式:HH:mm)
        type: string
      enable_time_start:
        description: 每日可签到开始时间(格式:HH:mm)
        type: string
      min_balance:
        description: 最低余额要求(0:不限制)
        type: number
      min_level:
        description: 最低等级要求(0:不限制)
        type: integer
      need_mobile:
        description: 是否需要绑定手机(true:需要 false:不需要)
        type: boolean
      need_real_name:
        description: 签到限制条件
        type: boolean
      period_days:
        description: 指定天数(当period_type=3时有效)
        type: integer
      period_type:
        description: 统计周期类型(1:周 2:月 3:指定天数)
        type: integer
      rewards:
        description: 普通签到奖励
        items:
          $ref: '#/definitions/dto.SignRewardInfo'
        type: array
      status:
        description: 状态(1:启用 2:禁用)
        type: integer
    type: object
  dto.SignRecordItem:
    properties:
      account:
        description: 账号，仅在show_detail=true时返回
        type: string
      continuous_count:
        description: 连续签到次数
        type: integer
      created_at:
        description: 创建时间
        type: integer
      face_url:
        description: 头像，仅在show_detail=true时返回
        type: string
      gender:
        description: 性别，仅在show_detail=true时返回
        type: integer
      id:
        description: 记录ID
        type: string
      nickname:
        description: 详情字段
        type: string
      period_count:
        description: 当前周期签到次数
        type: integer
      reward_amount:
        description: 签到奖励金额
        type: string
      reward_type:
        description: 奖励类型
        type: string
      sign_date:
        description: 签到日期 YYYY-MM-DD
        type: string
      sign_time:
        description: 签到时间 HH:mm:ss
        type: string
      user_id:
        description: 用户ID
        type: string
    type: object
  dto.SignRewardInfo:
    properties:
      amount:
        description: 奖励金额
        type: number
      days:
        description: 连续天数
        type: integer
      id:
        type: string
      reward_type:
        description: 奖励类型
        type: integer
      sort:
        description: 排序
        type: integer
      status:
        description: 状态
        type: integer
      wallet_type:
        description: 钱包类型
        type: integer
    type: object
  dto.SignRewardReq:
    properties:
      amount:
        description: 奖励金额
        type: number
      days:
        description: 连续天数(连续签到奖励时有效)
        type: integer
      reward_type:
        description: 奖励类型：1-普通签到奖励 2-连续签到奖励
        type: integer
      sort:
        description: 排序
        type: integer
      status:
        description: 状态：1-启用 2-禁用
        type: integer
      wallet_type:
        description: 钱包类型
        type: integer
    required:
    - amount
    - reward_type
    - status
    - wallet_type
    type: object
  dto.SubscribeModel:
    properties:
      createdAt:
        type: integer
      deletedAt:
        type: integer
      dis:
        description: 描述
        type: string
      end:
        description: 订阅结束时间
        type: integer
      group:
        description: 订阅的组
        type: string
      id:
        description: ID
        type: string
      name:
        description: 订阅名称
        type: string
      parameter:
        description: 参数
        items:
          $ref: '#/definitions/dto.SubscribeParameterModel'
        type: array
      start:
        description: 订阅开始时间
        type: integer
      status:
        description: 状态 1->新建, 2->启用，3->停用
        type: integer
      topic:
        description: 订阅的主题
        type: string
      updatedAt:
        type: integer
    type: object
  dto.SubscribeParameterModel:
    properties:
      data_type:
        description: 属性类型（如string, int, float, boolean, date, select, multiselect,
          switch等）
        type: string
      dis:
        description: 参数描述
        type: string
      id:
        description: ID
        type: string
      key:
        description: 属性的key
        type: string
      subscribe_id:
        description: 订阅事件的id
        type: string
      value:
        description: 参数值
        type: string
    type: object
  dto.Task:
    properties:
      args:
        description: 任务参数，使用--key=value格式
        type: string
      createdAt:
        type: integer
      cron:
        description: cron表达式
        type: string
      deletedAt:
        type: integer
      groupName:
        description: 分组ID
        type: string
      handler:
        description: 任务处理器名称
        type: string
      id:
        type: string
      name:
        description: 任务名称
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 状态 0:停止 1:运行
        type: integer
      updatedAt:
        type: integer
    type: object
  dto.TaskCategory:
    properties:
      completeType:
        description: 完成方式
        type: integer
      createdAt:
        type: integer
      description:
        type: string
      icon:
        type: string
      id:
        type: string
      name:
        type: string
      progressType:
        description: 进度类型
        type: string
      resetDays:
        description: 重置周期
        type: integer
      resetType:
        description: 重置类型
        type: integer
      sort:
        type: integer
      status:
        type: integer
      updatedAt:
        type: integer
    type: object
  dto.TaskCategoryDetail:
    properties:
      completeType:
        description: 完成方式
        type: integer
      createdAt:
        description: 创建时间
        type: integer
      description:
        description: 分类描述
        type: string
      id:
        description: 分类ID
        type: string
      name:
        description: 分类名称
        type: string
      progressType:
        description: 进度类型
        type: string
      resetDays:
        description: 重置周期
        type: integer
      resetType:
        description: 重置类型
        type: integer
      sort:
        type: integer
      status:
        type: integer
      tasks:
        description: 分类下的任务列表
        items:
          $ref: '#/definitions/dto.TaskInfo'
        type: array
      updatedAt:
        description: 更新时间
        type: integer
    type: object
  dto.TaskConditionItem:
    properties:
      description:
        type: string
      operator:
        type: string
      sort:
        type: integer
      target:
        type: string
      type:
        type: integer
      value:
        type: string
    type: object
  dto.TaskInfo:
    properties:
      categoryId:
        type: string
      conditions:
        items:
          $ref: '#/definitions/dto.TaskConditionItem'
        type: array
      createdAt:
        type: integer
      description:
        type: string
      endTime:
        type: integer
      id:
        type: string
      progressType:
        description: 用于标识进度来源
        type: string
      rebates:
        description: 任务返佣：返佣项列表
        items:
          $ref: '#/definitions/dto.TaskRebateItem'
        type: array
      rewardType:
        description: 奖励类型 1:自动到账 2:用户领取
        type: integer
      rewards:
        items:
          $ref: '#/definitions/dto.TaskRewardInfo'
        type: array
      sort:
        description: CompleteType int8                 `json:"completeType" binding:"completeType"`
          // 完成方式 1:手动完成 2:进度自动完成 3:可重复完成
        type: integer
      startTime:
        type: integer
      status:
        type: integer
      taskType:
        description: 任务类型：1-普通任务 2-立即触发任务
        type: integer
      title:
        type: string
    type: object
  dto.TaskLog:
    properties:
      createdAt:
        type: integer
      deletedAt:
        type: integer
      duration:
        type: integer
      end_time:
        type: integer
      error:
        type: string
      id:
        type: string
      output:
        type: string
      start_time:
        type: integer
      status:
        type: integer
      task_id:
        type: string
      updatedAt:
        type: integer
    type: object
  dto.TaskRebateItem:
    properties:
      amount:
        description: 返佣金额：精确到小数点后2位
        type: number
      description:
        description: 返佣描述：对返佣的文字说明
        type: string
      funding_type:
        description: 资金类型 1:余额 2:冻结金额 3:可提现额度
        type: integer
      rebateRatio:
        description: 返佣比例：字符串分割的数字，如："0.1,0.2,0.3"
        type: string
      sort:
        description: 排序值：值越小越靠前，最小为0
        minimum: 0
        type: integer
      sourceType:
        description: 资金来源类型
        type: string
      walletType:
        description: 钱包类型：1-现金 2-积分 3-虚拟币
        type: integer
    required:
    - amount
    - rebateRatio
    - sourceType
    - walletType
    type: object
  dto.TaskRewardInfo:
    properties:
      amount:
        description: 奖励金额：精确到小数点后2位
        type: number
      description:
        description: 奖励描述：对奖励的文字说明
        type: string
      funding_type:
        description: 资金类型 1:余额 2:冻结金额 3:可提现额度
        type: integer
      id:
        description: 奖励ID：唯一标识
        type: string
      sort:
        description: 排序值：值越小越靠前
        type: integer
      sourceType:
        description: 资金来源类型
        type: string
      taskId:
        description: 任务ID：关联的任务
        type: string
      walletType:
        description: 钱包类型：1-现金 2-积分 3-虚拟币
        type: integer
    required:
    - sourceType
    type: object
  dto.TaskRewardItem:
    properties:
      amount:
        description: 奖励金额：精确到小数点后2位
        type: number
      description:
        description: 奖励描述：对奖励的文字说明
        type: string
      funding_type:
        description: 资金类型 1:余额 2:冻结金额 3:可提现额度
        type: integer
      sort:
        description: 排序值：值越小越靠前，最小为0
        minimum: 0
        type: integer
      sourceType:
        description: 资金来源类型
        type: string
      walletType:
        description: 钱包类型：1-现金 2-积分 3-虚拟币
        type: integer
    required:
    - amount
    - sourceType
    - walletType
    type: object
  dto.TaskStatusInfo:
    properties:
      completeTime:
        description: 完成时间：任务完成时间戳
        type: integer
      endTime:
        description: 结束时间：任务结束时间戳
        type: integer
      rewardTime:
        description: 领取时间：奖励领取时间戳
        type: integer
      rewardType:
        description: 奖励类型：1-自动发放 2-手动领取
        type: integer
      startTime:
        description: 开始时间：任务开始时间戳
        type: integer
      status:
        description: 状态：0-未开始 1-进行中 2-已完成 3-已领取 4-已重置
        type: integer
      taskId:
        description: 任务ID：唯一标识
        type: string
      taskName:
        description: 任务名称：显示名称
        type: string
    type: object
  dto.TestRebateReq:
    properties:
      extend_attrs:
        additionalProperties:
          type: number
        description: 扩展属性
        type: object
      order_attrs:
        additionalProperties:
          type: number
        description: 订单属性
        type: object
      product_id:
        description: 产品ID
        type: string
      quantity:
        description: 数量
        type: integer
      total_amount:
        description: 总金额
        type: number
      user_id:
        description: 用户ID
        type: string
    required:
    - product_id
    - user_id
    type: object
  dto.TestRebateResp:
    properties:
      description:
        description: 描述信息
        type: string
      items:
        description: 所有返佣明细
        items:
          $ref: '#/definitions/dto.RebateSummaryDTO'
        type: array
      rule_maps:
        description: 各规则返佣结果
        items:
          $ref: '#/definitions/dto.RebateSummary'
        type: array
      total_rebate:
        description: 总返佣金额
        type: number
    type: object
  dto.UpdateAnnouncementReq:
    properties:
      area:
        description: 地区
        type: string
      content:
        description: 公告内容
        type: string
      id:
        type: string
      popUp:
        description: 是否弹出 1->是，2->否
        type: integer
      title:
        description: 标题
        type: string
    type: object
  dto.UpdateAnnouncementStatusReq:
    properties:
      id:
        type: string
      status:
        description: 公告状态 1->新增，2->发布，3->关闭
        type: integer
    type: object
  dto.UpdateBankCardReq:
    properties:
      account:
        description: 账号
        type: string
      address:
        description: 地址
        type: string
      bank:
        description: 银行
        type: string
      bankAbbreviation:
        description: 银行简称
        type: string
      cardCode:
        description: 卡号
        type: string
      fullName:
        description: 真实姓名
        type: string
      id:
        type: string
      phone:
        description: 银行预留手机号
        type: string
      qrCode:
        description: 收款码
        type: string
      type:
        description: 类型 默认1->银行卡,2:收款码,3:地址
        type: integer
    type: object
  dto.UpdateCategoryProgressReq:
    properties:
      categoryId:
        description: 分类ID：任务所属分类
        type: string
      progressType:
        description: 进度类型：标识进度的类型
        type: string
      userId:
        description: 用户ID：进行任务的用户
        type: string
      value:
        description: 进度值：当前的进度数值
        type: string
    required:
    - categoryId
    - progressType
    - userId
    type: object
  dto.UpdateCategoryReq:
    properties:
      area:
        description: 地区代码，选填
        type: string
      dis:
        description: 分类描述，选填
        type: string
      id:
        description: 分类ID，必填
        type: string
      name:
        description: 分类名称，选填
        type: string
      template_id:
        description: 属性模板ID，选填
        type: string
      type:
        description: 商品类型 1:充值 2:兑换 3:抽奖 4:投资理财
        type: integer
    required:
    - id
    type: object
  dto.UpdateCategoryStatusReq:
    properties:
      id:
        description: 分类ID，必填
        type: string
      status:
        description: 目标状态，必填：1-新增 2-启用 3-停用
        type: integer
    required:
    - id
    - status
    type: object
  dto.UpdateEventReq:
    properties:
      dis:
        description: 描述
        type: string
      id:
        description: ID
        type: string
      name:
        description: 名称
        type: string
      topic:
        description: 主题
        type: string
    type: object
  dto.UpdateEventStatusReq:
    properties:
      id:
        type: string
      status:
        description: 事件状态 1->未达标, 2->完成，3->奖励发放完成
        type: integer
    type: object
  dto.UpdateInformationReq:
    properties:
      cover:
        description: 封面
        type: string
      customId:
        description: 自定义id
        type: string
      dis:
        description: 描述
        items:
          type: string
        type: array
      id:
        type: string
      link:
        description: 链接
        type: string
      name:
        description: 名称
        type: string
      price:
        description: 金额
        type: number
      sorting:
        description: 排序数字越大越靠前
        type: integer
    type: object
  dto.UpdateNewsCategoryRequest:
    properties:
      area:
        type: string
      dis:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        type: integer
    required:
    - id
    type: object
  dto.UpdateNewsRequest:
    properties:
      classId:
        type: string
      content:
        type: string
      cover:
        type: string
      id:
        type: string
      introduction:
        type: string
      sorting:
        type: integer
      title:
        type: string
    required:
    - id
    type: object
  dto.UpdateOrderStatusReq:
    properties:
      id:
        type: string
      remark:
        type: string
      status:
        $ref: '#/definitions/model.OrderStatus'
    type: object
  dto.UpdateProductReq:
    properties:
      area:
        description: 基础信息
        type: string
      attributes:
        additionalProperties:
          type: string
        description: 其他属性
        type: object
      category_id:
        description: 分类ID
        type: string
      description:
        description: 产品详细描述
        type: string
      expected_rate:
        description: 预期收益率
        type: number
      features:
        description: 产品特点
        type: string
      finance_settlement_type:
        description: 结算方式配置
        type: integer
      fixed_price:
        description: 是否固定价格
        type: boolean
      id:
        description: 产品ID
        type: string
      images:
        description: 图片列表URL
        items:
          type: string
        type: array
      investment_period:
        description: 投资理财配置
        type: integer
      is_physical:
        description: 是否实物奖品
        type: boolean
      is_thanks:
        description: 是否谢谢参与(未中奖)
        type: boolean
      limit_by_total:
        description: 是否受总数量限制
        type: boolean
      lottery_weight:
        description: 抽奖配置
        type: integer
      main_image:
        description: 主图URL
        type: string
      max_number:
        description: 最大购买数量
        type: integer
      max_price:
        description: 最高价格
        type: number
      min_number:
        description: 数量限制
        type: integer
      min_price:
        description: 最低价格
        type: number
      name:
        description: 产品名称
        type: string
      need_confirmation:
        description: 是否需要确认
        type: integer
      payment_method_id:
        description: 支付与收益
        type: integer
      person_limit:
        description: 个人限购数量
        type: integer
      price:
        description: 固定价格
        type: number
      principal_deduction:
        description: 提前赎回本金扣除比例
        type: number
      profit_wallet:
        description: 收益钱包ID
        type: integer
      restriction_type:
        description: 限制类型
        type: integer
      return_principal:
        description: 是否返本
        type: boolean
      return_principal_wallet:
        description: 返本钱包ID
        type: integer
      reward_amount:
        description: 奖励金额（元）
        type: number
      sales_start_time:
        description: 销售开始时间
        type: integer
      settlement_amount:
        description: 固定结算金额
        type: number
      settlement_cycle:
        description: 结算周期
        type: integer
      settlement_days:
        description: 自定义结算天数
        type: integer
      settlement_delay:
        description: 结算延迟天数
        type: integer
      settlement_ratio:
        description: 结算比例
        type: number
      settlement_start_day:
        description: 结算开始日
        type: integer
      settlement_time:
        description: 结算时间
        type: integer
      sorting:
        description: 排序与价格
        type: integer
      total_quantity:
        description: 商品总数量
        type: integer
      workday_only:
        description: 结算时间配置
        type: boolean
    required:
    - area
    - category_id
    - description
    - id
    - main_image
    - max_number
    - min_number
    - name
    - need_confirmation
    - payment_method_id
    - profit_wallet
    type: object
  dto.UpdateProductRewardReq:
    properties:
      amount:
        description: 奖励金额
        type: number
      calc_type:
        description: 计算方式
        type: string
      category_id:
        description: 关联的分类ID
        type: string
      description:
        description: 奖励规则说明
        type: string
      formula:
        description: 公式计算
        type: string
      formula_vars:
        description: 公式变量映射
        type: string
      funding_type:
        description: 资金类型
        type: integer
      id:
        description: 奖励规则ID
        type: string
      lua_script:
        description: Lua脚本
        type: string
      lua_vars:
        description: Lua脚本变量映射
        type: string
      name:
        description: 奖励规则名称
        type: string
      product_id:
        description: 关联的产品ID
        type: string
      source:
        description: 金额来源
        type: string
      source_id:
        description: 来源ID
        type: string
      trigger:
        description: 触发动作
        type: string
      wallet_id:
        description: 奖励发放配置
        type: integer
    required:
    - calc_type
    - funding_type
    - id
    - name
    - trigger
    - wallet_id
    type: object
  dto.UpdateProductRewardStatusReq:
    properties:
      id:
        description: 奖励规则ID
        type: string
      status:
        description: 状态 1:启用 2:禁用
        type: integer
    required:
    - id
    - status
    type: object
  dto.UpdateProductStatusReq:
    properties:
      id:
        description: 产品ID
        type: string
      status:
        description: 产品状态 1:新增 2:上架 3:下架
        type: integer
    required:
    - id
    - status
    type: object
  dto.UpdateRebateReq:
    properties:
      amount:
        description: 返佣金额
        type: number
      calc_type:
        description: 计算方式
        type: string
      description:
        description: 返佣规则说明
        type: string
      formula:
        description: 计算公式
        type: string
      formula_vars:
        description: 公式变量映射
        items:
          $ref: '#/definitions/dto.FormulaVariable'
        type: array
      funding_type:
        description: 资金类型
        type: integer
      id:
        description: 返佣配置ID
        type: string
      lua_script:
        description: Lua脚本代码
        type: string
      lua_vars:
        description: Lua脚本变量映射
        type: string
      name:
        description: 返佣名称
        type: string
      rates:
        description: 返佣比例配置
        items:
          $ref: '#/definitions/dto.RebateRate'
        type: array
      source:
        description: 金额来源
        type: string
      source_id:
        description: 来源ID
        type: string
      trigger:
        description: 触发动作
        type: string
      wallet_id:
        description: 钱包ID
        type: integer
    required:
    - id
    type: object
  dto.UpdateRebateStatusReq:
    properties:
      id:
        description: 返佣配置ID
        type: string
      status:
        description: 状态 1:启用 2:禁用
        type: integer
    required:
    - id
    - status
    type: object
  dto.UpdateSignConfigReq:
    properties:
      continuous_type:
        description: 连续签到类型(1:断了就重置 2:周期内连续)
        enum:
        - 1
        - 2
        type: integer
      daily_limit:
        description: 每日签到次数限制，最小为1
        minimum: 1
        type: integer
      description:
        description: 签到说明文案(支持HTML格式)
        type: string
      enable_time_end:
        description: 每日可签到结束时间(格式:HH:mm)
        type: string
      enable_time_start:
        description: 每日可签到开始时间(格式:HH:mm)
        type: string
      min_balance:
        description: 最低余额要求(0:不限制)
        minimum: 0
        type: number
      min_level:
        description: 最低等级要求(0:不限制)
        minimum: 0
        type: integer
      need_mobile:
        description: 是否需要绑定手机(true:需要 false:不需要)
        type: boolean
      need_real_name:
        description: 签到限制条件
        type: boolean
      period_days:
        description: 指定天数(当period_type=3时有效)
        type: integer
      period_type:
        description: 统计周期类型(1:周 2:月 3:指定天数)
        enum:
        - 1
        - 2
        - 3
        type: integer
      status:
        description: 状态(1:启用 2:禁用)
        enum:
        - 1
        - 2
        type: integer
    required:
    - continuous_type
    - daily_limit
    - period_type
    - status
    type: object
  dto.UpdateSubscribeReq:
    properties:
      dis:
        description: 描述
        type: string
      group:
        description: 订阅的组
        type: string
      id:
        description: ID
        type: string
      name:
        description: 订阅名称
        type: string
      parameter:
        description: 参数
        items:
          $ref: '#/definitions/dto.SubscribeParameterModel'
        type: array
      topic:
        description: 订阅的主题
        type: string
    type: object
  dto.UpdateTaskCategory:
    properties:
      completeType:
        description: 完成方式
        enum:
        - 1
        - 2
        - 3
        type: integer
      description:
        type: string
      icon:
        type: string
      id:
        type: string
      name:
        type: string
      progressType:
        description: 进度类型
        type: string
      resetDays:
        description: 重置周期
        minimum: 0
        type: integer
      resetType:
        description: 重置类型
        maximum: 2
        minimum: 0
        type: integer
      sort:
        minimum: 0
        type: integer
      status:
        enum:
        - 1
        - 2
        type: integer
    required:
    - id
    type: object
  dto.UpdateTaskProgressByTypeReq:
    properties:
      progressType:
        description: 进度类型
        type: string
      userId:
        description: 用户ID
        type: string
      value:
        description: 进度值
        type: string
    required:
    - progressType
    - userId
    - value
    type: object
  dto.UpdateWalletTypeReq:
    properties:
      feeRate:
        type: number
      id:
        type: integer
      localeKey:
        type: string
      maxAmount:
        type: number
      maxFee:
        type: number
      maxWithdrawals:
        type: integer
      minAmount:
        type: number
      minFee:
        type: number
      needPassword:
        type: integer
      needReal:
        type: integer
      remark:
        type: string
      status:
        type: integer
      typeName:
        type: string
      valuePerShare:
        type: number
      withdrawConditions:
        items:
          $ref: '#/definitions/dto.WithdrawConditionGroupRequest'
        type: array
    required:
    - id
    type: object
  dto.UserAccountModel:
    properties:
      account:
        description: 账号
        type: string
      age:
        type: integer
      bondId:
        type: string
      createdAt:
        type: integer
      deletedAt:
        type: integer
      faceURL:
        description: 头像
        type: string
      fullName:
        type: string
      id:
        description: 主键
        type: string
      isReal:
        description: 是否实名认证，1:是;0:否
        type: integer
      nickname:
        description: 昵称
        type: string
      personId:
        type: string
      phone:
        description: 手机号
        type: string
      updatedAt:
        type: integer
      wallets:
        description: 钱包账户
        items:
          $ref: '#/definitions/dto.UserWalletModel'
        type: array
    type: object
  dto.UserBankCard:
    properties:
      account:
        description: 账号
        type: string
      address:
        description: 地址
        type: string
      bank:
        description: 银行
        type: string
      bankAbbreviation:
        description: 银行简称
        type: string
      cardCode:
        description: 卡号
        type: string
      createdAt:
        type: integer
      deletedAt:
        type: integer
      fullName:
        type: string
      id:
        type: string
      isDefault:
        description: 是否默认
        type: integer
      phone:
        description: 银行预留手机号
        type: string
      qrCode:
        description: 收款码
        type: string
      type:
        description: 类型 默认1->银行卡,2:收款码,3:地址
        type: integer
      updatedAt:
        type: integer
      userId:
        description: 用户id
        type: string
    type: object
  dto.UserLineChartStatistics:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/dto.UserLineChartStatisticsData'
        description: 统计数据
      dates:
        description: 日期列表 (YYYY-MM-DD格式)
        items:
          type: string
        type: array
    type: object
  dto.UserLineChartStatisticsData:
    properties:
      newRealUsers:
        description: 每天的新增真实用户数量
        items:
          type: integer
        type: array
      newUsers:
        description: 每天的新增用户数量
        items:
          type: integer
        type: array
      realRealNameUsers:
        description: 真实实名用户总数量
        items:
          type: integer
        type: array
      realUsers:
        description: 真实用户数量
        items:
          type: integer
        type: array
      totalRealNameUsers:
        description: 名用户总数量
        items:
          type: integer
        type: array
      totalUsers:
        description: 用户总数
        items:
          type: integer
        type: array
    type: object
  dto.UserStatistics:
    properties:
      day:
        allOf:
        - $ref: '#/definitions/dto.UserStatisticsItem'
        description: 当天
      real:
        allOf:
        - $ref: '#/definitions/dto.UserStatisticsItem'
        description: 真实
      total:
        allOf:
        - $ref: '#/definitions/dto.UserStatisticsItem'
        description: 注册
    type: object
  dto.UserStatisticsItem:
    properties:
      realityNum:
        description: 真实
        type: integer
      testNum:
        description: 测试
        type: integer
      toTalNum:
        description: 总数
        type: integer
    type: object
  dto.UserWallet:
    properties:
      userId:
        type: string
      wallets:
        description: 钱包账户
        items:
          $ref: '#/definitions/dto.UserWalletModel'
        type: array
    type: object
  dto.UserWalletDetails:
    properties:
      account:
        description: 手机
        type: string
      accountType:
        description: 账户类型
        type: integer
      cardCode:
        description: 卡号
        type: string
      cumulativePurchaseAmount:
        description: 累积购买金额
        type: string
      cumulativeWithdrawalAmount:
        description: 累积提现金额
        type: string
      faceURL:
        description: 头像
        type: string
      gender:
        description: 性别
        type: integer
      id:
        description: 钱包id
        type: string
      money:
        description: 金额
        type: string
      nickname:
        description: 用户昵称
        type: string
      payPassword:
        description: 支付密码
        type: string
      status:
        description: 账户状态 1->激活, 2->冻结
        type: integer
      userId:
        type: string
    type: object
  dto.UserWalletModel:
    properties:
      MaxWithdrawals:
        description: 最大提现次数
        type: integer
      accountType:
        description: 账户类型
        type: integer
      available_withdrawal_amount:
        description: 可提现额度
        type: string
      availableMoney:
        description: 金额
        type: string
      cardCode:
        description: 卡号
        type: string
      cumulativePurchaseAmount:
        description: 累积购买金额
        type: string
      cumulativeWithdrawalAmount:
        description: 累积提现金额
        type: string
      frozenAmount:
        description: 冻结金额
        type: string
      id:
        description: 钱包id
        type: string
      localeKey:
        description: 国际化标志
        type: string
      maxAmount:
        description: 最da提现金额
        type: number
      minAmount:
        description: 最小提现金额
        type: number
      needPassword:
        description: 是否需要支付密码 1->是，2->否
        type: integer
      needReal:
        description: 是否需要实名 1->是，2->否
        type: integer
      payPassword:
        description: 支付密码
        type: string
      remake:
        description: 钱包名称国际化
        type: string
      status:
        description: 账户状态 1->激活, 2->冻结
        type: integer
      typeName:
        description: 钱包类型名称
        type: string
    type: object
  dto.WalletTypeModel:
    properties:
      createdAt:
        type: integer
      feeRate:
        type: number
      id:
        type: integer
      localeKey:
        type: string
      maxAmount:
        type: number
      maxFee:
        type: number
      maxWithdrawals:
        type: integer
      minAmount:
        type: number
      minFee:
        type: number
      needPassword:
        type: integer
      needReal:
        type: integer
      remark:
        type: string
      status:
        type: integer
      tenantId:
        type: string
      typeName:
        type: string
      updatedAt:
        type: integer
      valuePerShare:
        type: number
      withdrawConditions:
        items:
          $ref: '#/definitions/dto.WithdrawConditionGroupRequest'
        type: array
    type: object
  dto.WithdrawConditionGroupRequest:
    properties:
      conditions:
        description: 组内条件列表
        items:
          $ref: '#/definitions/dto.WithdrawConditionRequest'
        type: array
      description:
        description: 条件组描述
        type: string
      operator:
        description: 组间逻辑运算符(and/or)
        type: string
    required:
    - conditions
    - description
    - operator
    type: object
  dto.WithdrawConditionRequest:
    properties:
      categoryId:
        description: 产品分类ID
        type: string
      description:
        description: 条件描述
        type: string
      luaScript:
        description: Lua脚本
        type: string
      operator:
        description: 操作符
        type: string
      productId:
        description: 产品ID
        type: string
      productType:
        description: 产品类型
        type: string
      type:
        description: 条件类型
        type: string
      value:
        description: 比较值
        type: string
    required:
    - description
    - operator
    - type
    - value
    type: object
  dto.WithdrawalApplicationDTO:
    properties:
      actualAmount:
        description: 实际到账金额
        type: integer
      address:
        description: 地址
        type: string
      amount:
        description: 申请金额
        type: integer
      applicant:
        description: 申请人
        type: string
      bankName:
        description: 银行名称
        type: string
      bankType:
        description: 类型 默认1->银行卡,2:收款码,3:地址
        type: integer
      cardCode:
        description: 提现的卡号
        type: string
      cardHolder:
        description: 持卡人姓名
        type: string
      createdAt:
        description: 创建时间
        type: integer
      deletedAt:
        description: 删除时间
        type: integer
      fundingType:
        description: 资金类型
        type: integer
      handleRemark:
        description: 处理意见
        type: string
      handleTime:
        description: 处理时间
        type: integer
      handleUserID:
        description: 处理人ID
        type: string
      handlingFees:
        description: 手续费
        type: integer
      id:
        description: 申请记录主键
        type: string
      qrCode:
        description: 收款码
        type: string
      receivingAccount:
        description: 收款账号
        type: string
      remark:
        description: 申请备注
        type: string
      sameReal:
        description: 和实名相同 1->是，2->否
        type: integer
      status:
        description: 处理方式 1->待处理，2->同意，3->拒绝
        type: integer
      tenantId:
        description: 租户ID
        type: string
      updatedAt:
        description: 更新时间
        type: integer
      userAccount:
        description: 用户账号
        type: string
      userID:
        description: 申请人ID
        type: string
    type: object
  excel.Column:
    properties:
      field:
        description: 字段名
        type: string
      format:
        description: 格式化函数名
        type: string
      sort:
        description: 排序
        type: integer
      title:
        description: 列标题
        type: string
      width:
        description: 列宽
        type: number
    type: object
  excel.ExportType:
    enum:
    - 1
    - 2
    - 3
    type: integer
    x-enum-comments:
      ExportTypeAll: 导出所有数据
      ExportTypeCurrentPage: 导出当前页
      ExportTypeQueryResult: 导出条件查询结果
    x-enum-varnames:
    - ExportTypeCurrentPage
    - ExportTypeQueryResult
    - ExportTypeAll
  github_com_secret-pr_go-server-template_framework_models_rule_engine_application_command.CreateCategoryCommand:
    properties:
      businessType:
        description: 业务类型
        type: string
      code:
        description: 分类编码
        type: string
      description:
        description: 分类描述
        type: string
      name:
        description: 分类名称
        type: string
      parentId:
        description: 父分类ID
        type: string
      sorting:
        description: 排序权重
        type: integer
      type:
        description: 分类类型
        type: string
    type: object
  github_com_secret-pr_go-server-template_framework_models_rule_engine_application_command.CreateTemplateCommand:
    properties:
      categoryId:
        description: 分类ID
        type: string
      code:
        description: 模板编码
        type: string
      conditions:
        description: 条件表达式
        type: string
      description:
        description: 模板描述
        type: string
      formula:
        description: 计算公式
        type: string
      formulaVars:
        description: 公式变量映射
        type: string
      luaScript:
        description: Lua脚本代码
        type: string
      name:
        description: 模板名称
        type: string
      parameters:
        description: 模板参数定义
        type: string
      priority:
        description: 优先级
        type: integer
      sorting:
        description: 排序权重
        type: integer
      type:
        description: 模板类型
        type: string
    type: object
  github_com_secret-pr_go-server-template_framework_models_rule_engine_application_command.UpdateCategoryCommand:
    properties:
      businessType:
        description: 业务类型
        type: string
      code:
        description: 分类编码
        type: string
      description:
        description: 分类描述
        type: string
      id:
        description: 分类ID
        type: string
      name:
        description: 分类名称
        type: string
      parentId:
        description: 父分类ID
        type: string
      sorting:
        description: 排序权重
        type: integer
      type:
        description: 分类类型
        type: string
    type: object
  github_com_secret-pr_go-server-template_framework_models_rule_engine_application_command.UpdateCategoryStatusCommand:
    properties:
      id:
        description: 分类ID
        type: string
      status:
        description: 状态
        type: integer
    type: object
  github_com_secret-pr_go-server-template_framework_models_rule_engine_application_command.UpdateTemplateCommand:
    properties:
      categoryId:
        description: 分类ID
        type: string
      code:
        description: 模板编码
        type: string
      conditions:
        description: 条件表达式
        type: string
      description:
        description: 模板描述
        type: string
      formula:
        description: 计算公式
        type: string
      formulaVars:
        description: 公式变量映射
        type: string
      id:
        description: 模板ID
        type: string
      luaScript:
        description: Lua脚本代码
        type: string
      name:
        description: 模板名称
        type: string
      parameters:
        description: 模板参数定义
        type: string
      priority:
        description: 优先级
        type: integer
      sorting:
        description: 排序权重
        type: integer
      type:
        description: 模板类型
        type: string
    type: object
  github_com_secret-pr_go-server-template_framework_models_rule_engine_application_command.UpdateTemplateStatusCommand:
    properties:
      id:
        description: 模板ID
        type: string
      status:
        description: 状态
        type: integer
    type: object
  github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto.CategoryDTO:
    properties:
      businessType:
        description: 业务类型
        type: string
      code:
        description: 分类编码
        type: string
      createdAt:
        description: 创建时间
        type: integer
      description:
        description: 分类描述
        type: string
      id:
        description: 分类ID
        type: string
      isLeaf:
        description: 是否叶子节点
        type: boolean
      level:
        description: 层级
        type: integer
      name:
        description: 分类名称
        type: string
      parentId:
        description: 父分类ID
        type: string
      path:
        description: 路径
        type: string
      sorting:
        description: 排序权重
        type: integer
      status:
        description: 状态
        type: integer
      tenantId:
        description: 租户ID
        type: string
      type:
        description: 分类类型
        type: string
      updatedAt:
        description: 更新时间
        type: integer
    type: object
  github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto.ConditionDTO:
    properties:
      expression:
        description: 条件表达式
        type: string
      parameters:
        additionalProperties: true
        description: 条件参数
        type: object
      type:
        description: 条件类型
        type: string
    type: object
  github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto.TemplateDTO:
    properties:
      categoryId:
        description: 分类ID
        type: string
      code:
        description: 模板编码
        type: string
      conditions:
        description: 条件表达式
        type: string
      createdAt:
        description: 创建时间
        type: integer
      description:
        description: 模板描述
        type: string
      formula:
        description: 计算公式
        type: string
      formulaVars:
        description: 公式变量映射
        type: string
      id:
        description: 模板ID
        type: string
      luaScript:
        description: Lua脚本代码
        type: string
      name:
        description: 模板名称
        type: string
      parameters:
        description: 模板参数定义
        type: string
      priority:
        description: 优先级
        type: integer
      sorting:
        description: 排序权重
        type: integer
      status:
        description: 状态
        type: integer
      tenantId:
        description: 租户ID
        type: string
      type:
        description: 模板类型
        type: string
      updatedAt:
        description: 更新时间
        type: integer
      version:
        description: 模板版本
        type: string
    type: object
  github_com_secret-pr_go-server-template_framework_models_systask_dto.UpdateTask:
    properties:
      args:
        description: 任务参数，使用--key=value格式
        type: string
      cron:
        description: cron表达式
        type: string
      groupName:
        description: 分组ID
        type: string
      handler:
        description: 任务处理器名称
        type: string
      id:
        type: string
      name:
        description: 任务名称
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 状态 2:停止 1:运行
        type: integer
    type: object
  github_com_secret-pr_go-server-template_internal_address_dto.UpdateAddressReq:
    properties:
      address:
        description: 详细地址
        type: string
      address_id:
        description: 地址ID
        type: string
      city:
        description: 城市
        type: string
      district:
        description: 区县
        type: string
      is_default:
        description: 是否默认地址
        type: boolean
      name:
        description: 收货人姓名
        type: string
      phone:
        description: 联系电话
        type: string
      postal_code:
        description: 邮政编码
        type: string
      province:
        description: 省份
        type: string
    required:
    - address
    - address_id
    - name
    - phone
    type: object
  github_com_secret-pr_go-server-template_internal_lottery_application_dto.UpdateAddressReq:
    properties:
      address:
        description: 收货地址
        type: string
      consignee:
        description: 收货人姓名
        type: string
      phone:
        description: 收货人电话
        type: string
      recordId:
        description: 抽奖记录ID
        type: string
      userId:
        description: 用户ID（可选，如果不提供则从token中获取）
        type: string
    type: object
  github_com_secret-pr_go-server-template_internal_product_dto.CategoryDTO:
    properties:
      area:
        description: 地区代码
        type: string
      area_i18n:
        description: 地区国际化键值
        type: string
      area_label:
        description: 地区显示名称（翻译后）
        type: string
      created_at:
        description: 创建时间戳
        type: integer
      dis:
        description: 分类描述
        type: string
      id:
        description: 分类ID
        type: string
      name:
        description: 分类名称
        type: string
      status:
        description: 状态：1-新增 2-启用 3-停用
        type: integer
      template_id:
        description: 属性模板ID
        type: string
      type:
        description: 商品类型：1-充值 2-兑换 3-抽奖 4-投资理财
        type: integer
      updated_at:
        description: 更新时间戳
        type: integer
    type: object
  github_com_secret-pr_go-server-template_internal_task_dto.UpdateTask:
    properties:
      categoryId:
        description: 分类ID：任务所属的分类
        type: string
      conditions:
        description: 任务条件：完成条件列表
        items:
          $ref: '#/definitions/dto.TaskConditionItem'
        type: array
      description:
        description: 任务描述：详细说明任务内容
        type: string
      endTime:
        description: 结束时间：时间戳，0表示永不过期
        type: integer
      id:
        description: 任务ID：要更新的任务ID
        type: string
      progressType:
        description: 用于标识进度来源
        type: string
      rebates:
        description: 任务返佣：返佣项列表
        items:
          $ref: '#/definitions/dto.TaskRebateItem'
        type: array
      rewardType:
        description: 奖励类型：1-自动发放 2-手动领取
        type: integer
      rewards:
        description: CompleteType int8                 `json:"completeType" binding:"completeType"`
          // 完成方式 1:手动完成 2:进度自动完成 3:可重复完成
        items:
          $ref: '#/definitions/dto.TaskRewardItem'
        type: array
      sort:
        description: 排序值：值越小越靠前
        type: integer
      startTime:
        description: 开始时间：时间戳，0表示立即开始
        type: integer
      status:
        description: 任务状态：0-禁用 1-启用
        type: integer
      taskType:
        description: 任务类型：1-普通任务 2-立即触发任务
        type: integer
      title:
        description: 任务标题：任务的显示名称
        type: string
    required:
    - categoryId
    - id
    - title
    type: object
  model.OrderStatus:
    enum:
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    type: integer
    x-enum-comments:
      OrderStatusCancelled: 已取消
      OrderStatusCompleted: 已完成
      OrderStatusExpired: 已过期
      OrderStatusFailed: 失败
      OrderStatusPaid: 已支付
      OrderStatusPaying: 支付处理中
      OrderStatusPending: 待支付
      OrderStatusProcessing: 处理中
      OrderStatusRefunded: 已退款
    x-enum-varnames:
    - OrderStatusPending
    - OrderStatusPaying
    - OrderStatusPaid
    - OrderStatusCompleted
    - OrderStatusCancelled
    - OrderStatusRefunded
    - OrderStatusProcessing
    - OrderStatusFailed
    - OrderStatusExpired
  model.OrderType:
    enum:
    - 1
    - 2
    - 4
    - 5
    - 6
    - 7
    type: integer
    x-enum-comments:
      OrderTypeCustom: 自定义订单
      OrderTypeExchange: 商品兑换
      OrderTypeFinance: 理财订单
      OrderTypeRecharge: 充值订单
      OrderTypeTransfer: 内部转账
      OrderTypeWithdraw: 提现订单
    x-enum-varnames:
    - OrderTypeRecharge
    - OrderTypeExchange
    - OrderTypeFinance
    - OrderTypeTransfer
    - OrderTypeWithdraw
    - OrderTypeCustom
  models.PageRes-dto_LotteryRecordDTO:
    properties:
      list:
        items:
          $ref: '#/definitions/dto.LotteryRecordDTO'
        type: array
      total:
        type: integer
    type: object
  models.PageRes-dto_OrderDTO:
    properties:
      list:
        items:
          $ref: '#/definitions/dto.OrderDTO'
        type: array
      total:
        type: integer
    type: object
  models.PageRes-dto_RuleDTO:
    properties:
      list:
        items:
          $ref: '#/definitions/dto.RuleDTO'
        type: array
      total:
        type: integer
    type: object
  models.PageRes-github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto_CategoryDTO:
    properties:
      list:
        items:
          $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto.CategoryDTO'
        type: array
      total:
        type: integer
    type: object
  models.PageRes-github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto_TemplateDTO:
    properties:
      list:
        items:
          $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto.TemplateDTO'
        type: array
      total:
        type: integer
    type: object
  models.StringIdReq:
    properties:
      id:
        description: 通用string类型Id(用于在path或param接受参数)
        type: string
    type: object
host: localhost:8858
info:
  contact:
    name: go-server-template-admin
  description: This is a demo using go-server-template-admin.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: go-server-template-admin
  version: "1.0"
paths:
  /api/admin/v1/address:
    get:
      consumes:
      - application/json
      description: 获取地址列表
      operationId: GetAddressList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.AddressResp'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取地址列表
      tags:
      - 地址管理
    put:
      consumes:
      - application/json
      description: 更新地址
      operationId: UpdateAddress
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_secret-pr_go-server-template_internal_address_dto.UpdateAddressReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新地址
      tags:
      - 地址管理
  /api/admin/v1/address/:id:
    delete:
      consumes:
      - application/json
      description: 删除地址
      operationId: DeleteAddress
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除地址
      tags:
      - 地址管理
  /api/admin/v1/address/default:
    get:
      consumes:
      - application/json
      description: 获取默认地址
      operationId: GetDefaultAddress
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.AddressResp'
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取默认地址
      tags:
      - 地址管理
  /api/admin/v1/address/set_default/:id:
    post:
      consumes:
      - application/json
      description: 设置默认地址
      operationId: SetDefaultAddress
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 设置默认地址
      tags:
      - 地址管理
  /api/admin/v1/announcement:
    get:
      consumes:
      - application/json
      description: 获取公告
      operationId: GetAnnouncementList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 地区
        in: query
        name: area
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 是否弹出 1->是，2->否
        in: query
        name: popUp
        type: integer
      - description: 是否返回公告内容
        in: query
        name: showDetails
        type: boolean
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 公告状态 1->新增，2->发布，3->关闭
        in: query
        name: status
        type: integer
      - description: 标题
        in: query
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.AnnouncementModel'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取公告
      tags:
      - 公告
    post:
      consumes:
      - application/json
      description: 新增公告
      operationId: CreateAnnouncement
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.AddAnnouncementReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 新增公告
      tags:
      - 公告
    put:
      consumes:
      - application/json
      description: 更新公告
      operationId: UpdateAnnouncement
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateAnnouncementReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新公告
      tags:
      - 公告
  /api/admin/v1/announcement/:id:
    delete:
      consumes:
      - application/json
      description: 删除产品分类
      operationId: DelAnnouncement
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.StringIdReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除产品分类
      tags:
      - 公告
  /api/admin/v1/announcement/details:
    get:
      consumes:
      - application/json
      description: 获取公告
      operationId: GetAnnouncementDetails
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.AnnouncementModel'
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取公告
      tags:
      - 公告
  /api/admin/v1/announcement/status:
    put:
      consumes:
      - application/json
      description: 更新公告状态
      operationId: UpdateAnnouncementStatus
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateAnnouncementStatusReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新公告状态
      tags:
      - 公告
  /api/admin/v1/bank:
    get:
      consumes:
      - application/json
      description: 用户银行卡
      operationId: GetBankLogs
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.UserBankCard'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 用户银行卡
      tags:
      - 银行卡
    put:
      consumes:
      - application/json
      description: 修改银行卡
      operationId: UpdateBankCard
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateBankCardReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 修改银行卡
      tags:
      - 银行卡
  /api/admin/v1/bank/:id:
    put:
      consumes:
      - application/json
      description: 根据id删除银行卡
      operationId: DeleteBankById
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 根据id删除银行卡
      tags:
      - 银行卡
  /api/admin/v1/bank/add_card:
    post:
      consumes:
      - application/json
      description: 新增银行卡
      operationId: AddBankCard
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.AddBankCardReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 新增银行卡
      tags:
      - 银行卡
  /api/admin/v1/business_task/manage:
    get:
      consumes:
      - application/json
      description: 分页获取任务列表
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: size
        type: integer
      - description: 分类ID
        in: query
        name: categoryId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 任务列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.TaskInfo'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取任务列表
      tags:
      - 业务任务管理
    post:
      consumes:
      - application/json
      description: 添加新的任务
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 添加任务参数
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.AddTask'
      produces:
      - application/json
      responses:
        "200":
          description: 添加成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 添加任务
      tags:
      - 业务任务管理
    put:
      consumes:
      - application/json
      description: 更新任务信息
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 更新任务参数
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_secret-pr_go-server-template_internal_task_dto.UpdateTask'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新任务
      tags:
      - 业务任务管理
  /api/admin/v1/business_task/manage/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的任务
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除任务
      tags:
      - 业务任务管理
    get:
      consumes:
      - application/json
      description: 获取指定任务的详细信息，包括任务基本信息、奖励和条件
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 任务详情
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.TaskInfo'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取任务详情
      tags:
      - 业务任务管理
  /api/admin/v1/business_task/manage/category:
    get:
      consumes:
      - application/json
      description: 分页获取任务分类列表
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 分类列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.TaskCategory'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取任务分类列表
      tags:
      - 业务任务管理
    post:
      consumes:
      - application/json
      description: 添加一个新的任务分类
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 添加任务分类参数
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.AddTaskCategory'
      produces:
      - application/json
      responses:
        "200":
          description: 添加成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 添加任务分类
      tags:
      - 业务任务管理
    put:
      consumes:
      - application/json
      description: 更新任务分类信息
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 更新任务分类参数
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateTaskCategory'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新任务分类
      tags:
      - 业务任务管理
  /api/admin/v1/business_task/manage/category/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的任务分类
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除任务分类
      tags:
      - 业务任务管理
    get:
      consumes:
      - application/json
      description: 获取指定任务分类的详细信息，包括分类信息和任务列表
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类ID
        in: path
        name: id
        required: true
        type: string
      - description: 任务状态过滤
        enum:
        - 0
        - 1
        - 2
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 分类详情
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.TaskCategoryDetail'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取任务分类详情
      tags:
      - 业务任务管理
  /api/admin/v1/business_task/manage/category/enabled:
    get:
      consumes:
      - application/json
      description: 获取所有启用状态的任务分类
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 启用的分类列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.TaskCategory'
                  type: array
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取启用的任务分类
      tags:
      - 业务任务管理
  /api/admin/v1/business_task/progress:
    post:
      consumes:
      - application/json
      description: 更新任务进度，自动处理进度类型任务的完成状态
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 更新进度参数
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateCategoryProgressReq'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新任务进度
      tags:
      - 业务任务管理
  /api/admin/v1/business_task/progress/type:
    post:
      consumes:
      - application/json
      description: 根据进度类型和值更新相关任务的进度
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 更新进度参数
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateTaskProgressByTypeReq'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 根据进度类型更新任务进度
      tags:
      - 业务任务管理
  /api/admin/v1/business_task/user/category/status:
    get:
      consumes:
      - application/json
      description: 获取用户在指定分类下所有任务的完成和领取状态
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户ID
        in: query
        name: userId
        required: true
        type: string
      - description: 分类ID
        in: query
        name: categoryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 任务状态列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.TaskStatusInfo'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取分类下用户任务状态
      tags:
      - 业务任务管理
  /api/admin/v1/dictionary/categories:
    get:
      consumes:
      - application/json
      description: 分页获取字典分类列表
      operationId: ListDictionaryCategories
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 分类ID
        in: query
        name: id
        type: string
      - description: 分类名称
        in: query
        name: name
        type: string
      - description: 国际化key
        in: query
        name: i18n_key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.Category'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取字典分类列表
      tags:
      - 数据字典
  /api/admin/v1/dictionary/category:
    post:
      consumes:
      - application/json
      description: 创建新的字典分类
      operationId: CreateDictionaryCategory
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.CategoryCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 创建字典分类
      tags:
      - 数据字典
  /api/admin/v1/dictionary/category/{id}:
    delete:
      consumes:
      - application/json
      description: 删除分类
      operationId: DelDictionaryCategory
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.Category'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除分类
      tags:
      - 数据字典
    get:
      consumes:
      - application/json
      description: 根据ID获取字典分类详情
      operationId: GetDictionaryCategory
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.Category'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取字典分类详情
      tags:
      - 数据字典
    put:
      consumes:
      - application/json
      description: 更新已存在的字典分类
      operationId: UpdateDictionaryCategory
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.CategoryUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新字典分类
      tags:
      - 数据字典
  /api/admin/v1/dictionary/option:
    post:
      consumes:
      - application/json
      description: 创建新的字典选项
      operationId: CreateDictionaryOption
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 选项信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.OptionCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 创建字典选项
      tags:
      - 数据字典
  /api/admin/v1/dictionary/option/{id}:
    delete:
      consumes:
      - application/json
      description: 删除字典选项
      operationId: DeleteDictionaryOption
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 选项ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除字典选项
      tags:
      - 数据字典
    put:
      consumes:
      - application/json
      description: 更新已存在的字典选项
      operationId: UpdateDictionaryOption
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 选项ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.OptionUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新字典选项
      tags:
      - 数据字典
  /api/admin/v1/dictionary/options:
    get:
      consumes:
      - application/json
      description: 获取字典选项列表
      operationId: GetDictionaryOptions
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类ID
        in: query
        name: category_id
        type: string
      - description: 关键字
        in: query
        name: keyword
        type: string
      - description: 状态
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.Option'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取字典选项列表
      tags:
      - 数据字典
  /api/admin/v1/event:
    get:
      consumes:
      - application/json
      description: 获取事件
      operationId: GetEventList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 状态
        in: query
        name: status
        type: integer
      - description: 主题
        in: query
        name: topic
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.EventModel'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取事件
      tags:
      - 事件
    post:
      consumes:
      - application/json
      description: 新增事件
      operationId: AddEvent
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.AddEventReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 新增事件
      tags:
      - 事件
    put:
      consumes:
      - application/json
      description: 修改事件
      operationId: UpdateEvent
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateEventReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 修改事件
      tags:
      - 事件
  /api/admin/v1/event/:id:
    get:
      consumes:
      - application/json
      description: 获取事件
      operationId: GetEvent
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.EventModel'
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取事件
      tags:
      - 事件
  /api/admin/v1/event/all:
    get:
      consumes:
      - application/json
      description: 获取所有模版列表
      operationId: GetAllEventList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.EventModel'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取所有模版列表
      tags:
      - 事件
  /api/admin/v1/event/dead_letter:
    get:
      consumes:
      - application/json
      description: 获取死信队列列表
      operationId: GetDeadLetterSubscribeList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 订阅的组
        in: query
        name: group
        type: string
      - description: 订阅名称
        in: query
        name: name
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 主题
        in: query
        name: topic
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.DeadLetterSubscribeModel'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取死信队列列表
      tags:
      - 事件
  /api/admin/v1/event/dead_letter/retry/:id:
    put:
      consumes:
      - application/json
      description: 死信队列重试
      operationId: DeadLetterQueueRetry
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 死信队列重试
      tags:
      - 事件
  /api/admin/v1/event/subscribe:
    get:
      consumes:
      - application/json
      description: 获取事件订阅
      operationId: GetSubscribeList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 订阅的组
        in: query
        name: group
        type: string
      - description: 订阅名称
        in: query
        name: name
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 状态
        in: query
        name: status
        type: integer
      - description: 主题
        in: query
        name: topic
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.SubscribeModel'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取事件订阅
      tags:
      - 事件
    post:
      consumes:
      - application/json
      description: 新增事件订阅
      operationId: AddSubscribe
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.AddSubscribeReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 新增事件订阅
      tags:
      - 事件订阅
    put:
      consumes:
      - application/json
      description: 修改事件订阅
      operationId: UpdateSubscribe
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateSubscribeReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 修改事件订阅
      tags:
      - 事件订阅
  /api/admin/v1/event/subscribe/:id:
    get:
      consumes:
      - application/json
      description: 获取事件订阅
      operationId: GetSubscribe
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.SubscribeModel'
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取事件订阅
      tags:
      - 事件订阅
  /api/admin/v1/event/subscribe/disable:
    put:
      consumes:
      - application/json
      description: 停止订阅
      operationId: DisableSubscribe
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 停止订阅
      tags:
      - 事件订阅
  /api/admin/v1/event/subscribe/enable:
    put:
      consumes:
      - application/json
      description: 启用订阅
      operationId: EnableSubscribe
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.EnableReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 启用订阅
      tags:
      - 事件订阅
  /api/admin/v1/event/update_status:
    put:
      consumes:
      - application/json
      description: 修改事件
      operationId: UpdateEventStatus
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateEventStatusReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 修改事件
      tags:
      - 事件
  /api/admin/v1/information:
    get:
      consumes:
      - application/json
      description: 获取自定义信息
      operationId: GetInformationList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 自定义id
        in: query
        name: customId
        type: string
      - description: 中文名称
        in: query
        name: name
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.InformationModel'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取自定义信息
      tags:
      - 自定义自定义信息
    post:
      consumes:
      - application/json
      description: 新增自定义信息
      operationId: AddInformation
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.AddInformationReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 新增自定义信息
      tags:
      - 自定义自定义信息
    put:
      consumes:
      - application/json
      description: 修改自定义信息
      operationId: UpdateInformation
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateInformationReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 修改自定义信息
      tags:
      - 自定义自定义信息
  /api/admin/v1/information/:id:
    delete:
      consumes:
      - application/json
      description: 删除自定义信息
      operationId: DelInformation
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除自定义信息
      tags:
      - 自定义自定义信息
  /api/admin/v1/news:
    get:
      consumes:
      - application/json
      description: 获取资讯列表
      operationId: GetNewsList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - in: query
        name: area
        type: string
      - in: query
        name: classId
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - in: query
        name: sortField
        type: string
      - in: query
        name: sortOrder
        type: string
      - in: query
        name: status
        type: integer
      - in: query
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.NewsDTO'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取资讯列表
      tags:
      - 新闻资讯
    post:
      consumes:
      - application/json
      description: 新增新闻资讯
      operationId: AddNews
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.CreateNewsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 新增新闻资讯
      tags:
      - 新闻资讯
    put:
      consumes:
      - application/json
      description: 修改资讯
      operationId: UpdateNews
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateNewsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 修改资讯
      tags:
      - 新闻资讯
  /api/admin/v1/news/:id:
    delete:
      consumes:
      - application/json
      description: 删除资讯
      operationId: DelNews
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除资讯
      tags:
      - 新闻资讯
    get:
      consumes:
      - application/json
      description: 获取资讯详情
      operationId: GetNewsDetails
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.NewsDTO'
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取资讯详情
      tags:
      - 新闻资讯
  /api/admin/v1/news/categories:
    get:
      consumes:
      - application/json
      description: 获取新闻分类列表
      operationId: GetNewsCategories
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - in: query
        name: area
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - in: query
        name: name
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取新闻分类列表
      tags:
      - 新闻资讯
    post:
      consumes:
      - application/json
      description: 新增新闻分类
      operationId: AddNewsCategories
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.CreateNewsCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 新增新闻分类
      tags:
      - 新闻资讯
    put:
      consumes:
      - application/json
      description: 修改新闻分类
      operationId: UpdateNewsCategories
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateNewsCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 修改新闻分类
      tags:
      - 新闻资讯
  /api/admin/v1/news/categories/{id}:
    delete:
      consumes:
      - application/json
      description: 删除新闻分类
      operationId: DelNewsCategories
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除新闻分类
      tags:
      - 新闻资讯
  /api/admin/v1/news/categories/all:
    get:
      consumes:
      - application/json
      description: 获取所有新闻分类列表
      operationId: GetAllList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取所有新闻分类列表
      tags:
      - 新闻资讯
  /api/admin/v1/news/release/:id:
    put:
      consumes:
      - application/json
      description: 发布资讯
      operationId: ReleaseNews
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 发布资讯
      tags:
      - 新闻资讯
  /api/admin/v1/news/removed/:id:
    put:
      consumes:
      - application/json
      description: 下架资讯
      operationId: RemovedNews
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 下架资讯
      tags:
      - 新闻资讯
  /api/admin/v1/product:
    get:
      consumes:
      - application/json
      description: 获取商品列表，支持分页和过滤
      operationId: ListProducts
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 地区
        in: query
        name: area
        type: string
      - description: 分类ID
        in: query
        name: category_id
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 产品名称，模糊查询
        in: query
        name: name
        type: string
      - description: 支付方式ID
        in: query
        name: payment_method_id
        type: integer
      - description: 收益钱包
        in: query
        name: profit_wallet
        type: integer
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 产品状态
        in: query
        name: status
        type: integer
      - description: 用户账号
        in: query
        name: user_account
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.ProductDTO'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取商品列表
      tags:
      - 商品
    post:
      consumes:
      - application/json
      description: 创建新的商品
      operationId: CreateProduct
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 商品创建请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProductReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 创建商品
      tags:
      - 商品
    put:
      consumes:
      - application/json
      description: 更新现有商品信息
      operationId: UpdateProduct
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 商品更新请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateProductReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新商品
      tags:
      - 商品
  /api/admin/v1/product/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定商品
      operationId: DeleteProduct
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 商品ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除商品
      tags:
      - 商品
    get:
      consumes:
      - application/json
      description: 获取指定商品的详细信息
      operationId: GetProduct
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 商品ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.ProductDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取商品详情
      tags:
      - 商品
  /api/admin/v1/product/categories:
    get:
      consumes:
      - application/json
      description: 获取模版列表
      operationId: GetProductCategoriesList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 地区代码，精确匹配
        in: query
        name: area
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 分类名称，支持模糊查询
        in: query
        name: name
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 状态，精确匹配
        in: query
        name: status
        type: integer
      - description: 商品类型，精确匹配
        in: query
        name: type
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.ListCategoryResp'
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取模版列表
      tags:
      - 商品
    post:
      consumes:
      - application/json
      description: 新增商品分类
      operationId: AddProductCategories
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCategoryReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 新增商品分类
      tags:
      - 商品
    put:
      consumes:
      - application/json
      description: 修改分类
      operationId: UpdateProductCategories
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateCategoryReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 修改分类
      tags:
      - 商品
  /api/admin/v1/product/categories/:id:
    delete:
      consumes:
      - application/json
      description: 删除分类
      operationId: DeleteProductCategories
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除分类
      tags:
      - 商品
  /api/admin/v1/product/categories/all:
    get:
      consumes:
      - application/json
      description: 获取所有分类
      operationId: GetAllProductCategoriesList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_secret-pr_go-server-template_internal_product_dto.CategoryDTO'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取所有分类
      tags:
      - 商品
  /api/admin/v1/product/categories/enabled:
    get:
      consumes:
      - application/json
      description: 获取所有启用状态的分类列表
      operationId: GetEnabledProductCategoriesList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_secret-pr_go-server-template_internal_product_dto.CategoryDTO'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取所有启用状态的分类
      tags:
      - 商品
  /api/admin/v1/product/categories/status:
    put:
      consumes:
      - application/json
      description: 修改分类状态
      operationId: UpdateProductCategoriesStatus
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateCategoryStatusReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 修改分类状态
      tags:
      - 商品
  /api/admin/v1/product/category/{id}:
    get:
      consumes:
      - application/json
      description: 获取指定分类下的所有商品
      operationId: GetProductsByCategory
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.ProductDTO'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取分类下的商品
      tags:
      - 商品
  /api/admin/v1/product/rebate:
    get:
      consumes:
      - application/json
      description: 获取返佣配置列表，支持分页和过滤
      operationId: ListRebates
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类ID
        in: query
        name: category_id
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 产品ID
        in: query
        name: product_id
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 金额来源
        in: query
        name: source
        type: string
      - description: 状态
        in: query
        name: status
        type: integer
      - description: 触发动作
        in: query
        name: trigger
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.ListRebateResp'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取返佣配置列表
      tags:
      - 商品返佣
    post:
      consumes:
      - application/json
      description: 创建新的返佣配置
      operationId: CreateRebate
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 返佣配置创建请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRebateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 创建返佣配置
      tags:
      - 商品返佣
    put:
      consumes:
      - application/json
      description: 更新现有返佣配置
      operationId: UpdateRebate
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 返佣配置更新请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateRebateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新返佣配置
      tags:
      - 商品返佣
  /api/admin/v1/product/rebate/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的返佣配置
      operationId: DeleteRebate
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 返佣配置ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除返佣配置
      tags:
      - 商品返佣
    get:
      consumes:
      - application/json
      description: 获取指定返佣配置的详细信息
      operationId: GetRebate
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 返佣配置ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.RebateDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取返佣配置
      tags:
      - 商品返佣
  /api/admin/v1/product/rebate/rebates:
    get:
      consumes:
      - application/json
      description: 获取指定商品的返佣配置列表
      operationId: GetProductRebates
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 商品ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.RebateDTO'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取商品返佣配置
      tags:
      - 商品返佣
  /api/admin/v1/product/rebate/status:
    put:
      consumes:
      - application/json
      description: 更新指定返佣配置的状态
      operationId: UpdateRebateStatus
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 状态更新请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateRebateStatusReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新返佣配置状态
      tags:
      - 商品返佣
  /api/admin/v1/product/rebate/test:
    post:
      consumes:
      - application/json
      description: 测试返佣计算逻辑
      operationId: TestCalculateRebate
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 测试请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.TestRebateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.TestRebateResp'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 测试返佣计算
      tags:
      - 商品返佣
  /api/admin/v1/product/reward:
    post:
      consumes:
      - application/json
      description: 创建新的商品奖励规则，支持多种计算方式（直接金额、公式计算、Lua脚本）
      operationId: CreateProductReward
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 奖励规则创建请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProductRewardReq'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 创建奖励规则
      tags:
      - 商品奖励
    put:
      consumes:
      - application/json
      description: 更新现有商品奖励规则，支持修改所有奖励规则属性
      operationId: UpdateProductReward
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 奖励规则更新请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateProductRewardReq'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新奖励规则
      tags:
      - 商品奖励
  /api/admin/v1/product/reward/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的奖励规则，删除后不可恢复
      operationId: DeleteProductReward
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 奖励规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除奖励规则
      tags:
      - 商品奖励
    get:
      consumes:
      - application/json
      description: 获取指定奖励规则的详细信息，包括所有配置参数
      operationId: GetProductReward
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 奖励规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 奖励规则详情
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.ProductRewardDTO'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取奖励规则
      tags:
      - 商品奖励
  /api/admin/v1/product/reward/category/{id}:
    get:
      consumes:
      - application/json
      description: 获取指定分类的所有奖励规则列表
      operationId: GetCategoryRewards
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 奖励规则列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.ProductRewardDTO'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取分类奖励列表
      tags:
      - 商品奖励
  /api/admin/v1/product/reward/product/{id}:
    get:
      consumes:
      - application/json
      description: 获取指定商品的所有奖励规则列表
      operationId: GetProductRewards
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 商品ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 奖励规则列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.ProductRewardDTO'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取商品奖励列表
      tags:
      - 商品奖励
  /api/admin/v1/product/reward/status:
    put:
      consumes:
      - application/json
      description: 更新指定奖励规则的状态（启用/禁用）
      operationId: UpdateProductRewardStatus
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 状态更新请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateProductRewardStatusReq'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新奖励规则状态
      tags:
      - 商品奖励
  /api/admin/v1/product/rule:
    get:
      consumes:
      - application/json
      description: 获取商品规则列表，支持分页和过滤
      operationId: ListRules
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - in: query
        name: category_id
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - in: query
        name: product_id
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - in: query
        name: status
        type: integer
      - in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.ProductRuleDTO'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取规则列表
      tags:
      - 商品规则
    post:
      consumes:
      - application/json
      description: 创建新的商品规则
      operationId: CreateRule
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 规则创建请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.ProductRuleDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 创建规则
      tags:
      - 商品规则
    put:
      consumes:
      - application/json
      description: 更新现有商品规则
      operationId: UpdateRule
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 规则更新请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.ProductRuleDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新规则
      tags:
      - 商品规则
  /api/admin/v1/product/rule/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的商品规则
      operationId: DeleteProductRule
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除规则
      tags:
      - 商品规则
    get:
      consumes:
      - application/json
      description: 获取指定规则的详细信息
      operationId: GetRule
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.ProductRuleDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取规则
      tags:
      - 商品规则
  /api/admin/v1/product/rule/execute:
    post:
      consumes:
      - application/json
      description: 执行商品规则
      operationId: ExecuteRules
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 规则执行请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.RuleExecuteInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 执行规则
      tags:
      - 商品规则
  /api/admin/v1/product/rule/execution:
    get:
      consumes:
      - application/json
      description: 获取规则执行列表，支持分页和过滤
      operationId: ListRuleExecutions
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - in: query
        name: rule_id
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.RuleExecutionDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取规则执行列表
      tags:
      - 商品规则
  /api/admin/v1/product/rule/execution/{id}:
    get:
      consumes:
      - application/json
      description: 获取指定规则执行的详细信息
      operationId: GetRuleExecution
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 规则执行ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.RuleExecutionDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取规则执行
      tags:
      - 商品规则
  /api/admin/v1/product/rule/template:
    get:
      consumes:
      - application/json
      description: 获取规则模板列表，支持分页和过滤
      operationId: ListRuleTemplates
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - in: query
        name: name
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - in: query
        name: status
        type: integer
      - in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.RuleTemplateDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取规则模板列表
      tags:
      - 商品规则
    post:
      consumes:
      - application/json
      description: 创建新的规则模板
      operationId: CreateRuleTemplate
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 规则模板创建请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.RuleTemplateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 创建规则模板
      tags:
      - 商品规则
    put:
      consumes:
      - application/json
      description: 更新现有规则模板
      operationId: UpdateRuleTemplate
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 规则模板更新请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.RuleTemplateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新规则模板
      tags:
      - 商品规则
  /api/admin/v1/product/rule/template/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的规则模板
      operationId: DeleteRuleTemplate
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 规则模板ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除规则模板
      tags:
      - 商品规则
    get:
      consumes:
      - application/json
      description: 获取指定规则模板的详细信息
      operationId: GetRuleTemplate
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 规则模板ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.RuleTemplateDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取规则模板
      tags:
      - 商品规则
  /api/admin/v1/product/rule/validate:
    post:
      consumes:
      - application/json
      description: 验证商品规则
      operationId: ValidateRules
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 规则验证请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.RuleValidateInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.RuleValidateResult'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 验证规则
      tags:
      - 商品规则
  /api/admin/v1/product/status:
    put:
      consumes:
      - application/json
      description: 更新指定商品的状态
      operationId: UpdateProductStatus
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 状态更新请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateProductStatusReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新商品状态
      tags:
      - 商品
  /api/admin/v1/sign/config:
    get:
      consumes:
      - application/json
      description: 获取签到配置信息，包括基础配置和奖励配置
      operationId: GetSignConfig
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 签到配置信息
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.SignConfigInfo'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取签到配置
      tags:
      - 签到管理
    put:
      consumes:
      - application/json
      description: 更新签到配置信息
      operationId: UpdateSignConfig
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 更新配置请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateSignConfigReq'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新签到配置
      tags:
      - 签到管理
  /api/admin/v1/sign/records:
    get:
      consumes:
      - application/json
      description: 获取签到记录列表，支持时间范围查询、分页和用户信息显示
      operationId: AdminGetSignRecords
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 页码
        in: query
        minimum: 1
        name: current
        required: true
        type: integer
      - description: 每页数量
        in: query
        maximum: 100
        minimum: 1
        name: size
        required: true
        type: integer
      - description: 开始时间戳
        in: query
        name: start_time
        type: integer
      - description: 结束时间戳
        in: query
        name: end_time
        type: integer
      - default: true
        description: 是否显示用户详情
        in: query
        name: show_detail
        type: boolean
      - description: 搜索关键字(用户名/账号)
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 签到记录列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.SignRecordItem'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取签到记录列表
      tags:
      - 签到管理
  /api/admin/v1/sign/rewards:
    get:
      consumes:
      - application/json
      description: 根据类型获取奖励配置列表
      operationId: GetRewardsByType
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 奖励类型(1:普通奖励 2:连续奖励)
        in: query
        name: type
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 奖励列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.SignRewardInfo'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取奖励列表
      tags:
      - 签到管理
    post:
      consumes:
      - application/json
      description: 添加新的签到奖励规则
      operationId: AddSignReward
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 奖励配置请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.SignRewardReq'
      produces:
      - application/json
      responses:
        "200":
          description: 添加成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 添加签到奖励
      tags:
      - 签到管理
  /api/admin/v1/sign/rewards/{id}:
    delete:
      consumes:
      - application/json
      description: 删除签到奖励配置
      operationId: DeleteSignReward
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 奖励ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除签到奖励
      tags:
      - 签到管理
    put:
      consumes:
      - application/json
      description: 更新现有的签到奖励规则
      operationId: UpdateSignReward
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 奖励ID
        in: path
        name: id
        required: true
        type: string
      - description: 奖励配置请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.SignRewardReq'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新签到奖励
      tags:
      - 签到管理
  /api/admin/v1/statistics/sign:
    get:
      consumes:
      - application/json
      description: 签到统计
      operationId: DaySignStatistics
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 签到统计
      tags:
      - 统计
  /api/admin/v1/statistics/user:
    get:
      consumes:
      - application/json
      description: 用户统计
      operationId: UserStatistics
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserStatistics'
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 用户统计
      tags:
      - 统计
  /api/admin/v1/tasks:
    get:
      consumes:
      - application/json
      description: 分页获取定时任务列表
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: size
        type: integer
      - description: 分组名称
        in: query
        name: groupName
        type: string
      - description: 任务名称
        in: query
        name: name
        type: string
      - description: 状态
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.Task'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误"{data=db.Response[dto.Task]}
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取任务列表
      tags:
      - 定时任务
    post:
      consumes:
      - application/json
      description: 创建定时任务
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 创建任务参数
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.CreateTask'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 创建任务
      tags:
      - 定时任务
    put:
      consumes:
      - application/json
      description: 更新定时任务
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 更新任务参数
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_systask_dto.UpdateTask'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新任务
      tags:
      - 定时任务
  /api/admin/v1/tasks/{id}:
    delete:
      consumes:
      - application/json
      description: 删除定时任务
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除任务
      tags:
      - 定时任务
  /api/admin/v1/tasks/disable/{id}:
    put:
      consumes:
      - application/json
      description: 停用定时任务
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 停用任务
      tags:
      - 定时任务
  /api/admin/v1/tasks/enable/{id}:
    put:
      consumes:
      - application/json
      description: 启用定时任务
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 启用任务
      tags:
      - 定时任务
  /api/admin/v1/tasks/execute/{id}:
    post:
      consumes:
      - application/json
      description: 手动执行一次定时任务
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 执行一次任务
      tags:
      - 定时任务
  /api/admin/v1/tasks/logs:
    get:
      consumes:
      - application/json
      description: 分页获取定时任务执行日志
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页数量
        in: query
        name: size
        type: integer
      - description: 任务ID
        in: query
        name: taskId
        type: string
      - description: 状态
        in: query
        name: status
        type: integer
      - description: 开始时间
        in: query
        name: startTime
        type: integer
      - description: 结束时间
        in: query
        name: endTime
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.TaskLog'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取任务日志
      tags:
      - 定时任务
  /api/admin/v1/wallet:
    get:
      consumes:
      - application/json
      description: 钱包列表
      operationId: GetWalletLogs
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 资金类型 1->保障金，2->圆梦金，3->救助金
        in: query
        name: accountType
        type: integer
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 搜索字段，支持 电话，code，昵称
        in: query
        name: keyWord
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 账户状态 1->激活, 2->冻结
        in: query
        name: status
        type: integer
      - description: 用户
        in: query
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.UserWalletDetails'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 钱包列表
      tags:
      - 钱包
  /api/admin/v1/wallet/account:
    get:
      consumes:
      - application/json
      description: 用户账户
      operationId: GetUserAccountList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 账号
        in: query
        name: account
        type: string
      - description: 年龄
        in: query
        name: age
        type: integer
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 姓名
        in: query
        name: fullName
        type: string
      - description: 昵称
        in: query
        name: nickname
        type: string
      - description: 身份证号
        in: query
        name: personId
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.UserAccountModel'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 用户账户
      tags:
      - 钱包
  /api/admin/v1/wallet/application:
    get:
      consumes:
      - application/json
      description: 提现申请
      operationId: GetAccountRequestList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 资金类型 1->保障金，2->圆梦金，3->救助金
        in: query
        name: accountType
        type: integer
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 搜索字段，支持 电话，code，昵称
        in: query
        name: keyWord
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 账户状态 1->激活, 2->冻结
        in: query
        name: status
        type: integer
      - description: 用户
        in: query
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.WithdrawalApplicationDTO'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 提现申请
      tags:
      - 钱包
    put:
      consumes:
      - application/json
      description: 提现申请
      operationId: HandleUserAccount
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.HandleUserWalletReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 提现申请
      tags:
      - 钱包
  /api/admin/v1/wallet/application/export:
    post:
      consumes:
      - application/json
      description: 导出账户请求列表
      operationId: ExportAccountRequestList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 搜索字段，账号
        in: query
        name: account
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 结束时间
        in: query
        name: endTime
        type: integer
      - description: 导出类型 1->导出当前页,2->导出条件查询结果,3->导出所有数据
        enum:
        - 1
        - 2
        - 3
        in: query
        name: exportType
        type: integer
        x-enum-comments:
          ExportTypeAll: 导出所有数据
          ExportTypeCurrentPage: 导出当前页
          ExportTypeQueryResult: 导出条件查询结果
        x-enum-varnames:
        - ExportTypeCurrentPage
        - ExportTypeQueryResult
        - ExportTypeAll
      - description: 导出相关字段
        in: query
        name: fileName
        type: string
      - description: 资金类型 1->保障金，2->圆梦金，3->救助金
        in: query
        name: fundingType
        type: integer
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 开始时间
        in: query
        name: startTime
        type: integer
      - description: 处理方式 1->待处理,2->拒绝,3->同意
        in: query
        name: status
        type: integer
      - description: app
        in: query
        name: userID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 导出账户请求列表
      tags:
      - 钱包
  /api/admin/v1/wallet/change_money:
    put:
      consumes:
      - application/json
      description: 金额调整
      operationId: AmountAdjustmentReq
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 账户类型
        in: query
        name: accountType
        type: integer
      - description: 金额
        in: query
        name: amount
        type: number
      - description: 主键
        in: query
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 金额调整
      tags:
      - 钱包
  /api/admin/v1/wallet/change_status:
    put:
      consumes:
      - application/json
      description: 更新钱包状态
      operationId: UpdateWalletStatus
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.ChangeWalletStatusReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新钱包状态
      tags:
      - 钱包
  /api/admin/v1/wallet/create/:id:
    put:
      consumes:
      - application/json
      description: 手动创建钱包
      operationId: CreateUserWallet
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 手动创建钱包
      tags:
      - 钱包
  /api/admin/v1/wallet/info:
    get:
      consumes:
      - application/json
      description: 获取钱包信息
      operationId: GetUserWallet
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通用string类型Id(用于在path或param接受参数)
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserWallet'
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取钱包信息
      tags:
      - 钱包
  /api/admin/v1/wallet/modify_transaction_records:
    put:
      consumes:
      - application/json
      description: 更新交易记录
      operationId: ModifyTransactionRecords
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 金额
        in: query
        name: amount
        type: number
      - description: 主键
        in: query
        name: id
        type: string
      - in: query
        name: remark
        type: string
      - description: 更新类型，1直接修改；2通过记录补齐;3基金会赠送
        in: query
        name: sourceType
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新交易记录
      tags:
      - 钱包
  /api/admin/v1/wallet/payment_log:
    get:
      consumes:
      - application/json
      description: 提现申请
      operationId: ObtainPaymentLog
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 变动金额（小于）
        in: query
        name: changeMoney
        type: integer
      - description: 用户
        in: query
        name: creator
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 结束时间
        in: query
        name: endTime
        type: integer
      - description: 资金类型 1->保障金，2->圆梦金，3->救助金
        in: query
        name: fundingType
        type: integer
      - description: 记录类型
        in: query
        name: logs_type
        type: integer
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 来源类型
        in: query
        name: sourceType
        type: string
      - description: 开始时间
        in: query
        name: startTime
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.ObtainPaymentLog'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 提现申请
      tags:
      - 钱包
  /api/admin/v1/wallet/transfer:
    post:
      consumes:
      - application/json
      description: 手动调整金额
      operationId: UpAndDownPoints
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 账户类型
        in: query
        name: accountType
        type: integer
      - description: 金额
        in: query
        name: amount
        type: number
      - in: query
        name: remark
        type: string
      - description: 更新类型，1直接修改；2通过记录补齐;3基金会赠送
        in: query
        name: sourceType
        type: integer
      - description: 类型，0上分；1扣减
        in: query
        name: type
        type: integer
      - description: 主键
        in: query
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 手动调整金额
      tags:
      - 钱包
  /api/admin/v1/wallet/type:
    get:
      consumes:
      - application/json
      description: 获取钱包类型
      operationId: GetWalletTypeList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 变动金额（小于）
        in: query
        name: changeMoney
        type: integer
      - description: 用户
        in: query
        name: creator
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 结束时间
        in: query
        name: endTime
        type: integer
      - description: 资金类型 1->保障金，2->圆梦金，3->救助金
        in: query
        name: fundingType
        type: integer
      - description: 记录类型
        in: query
        name: logs_type
        type: integer
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 来源类型
        in: query
        name: sourceType
        type: string
      - description: 开始时间
        in: query
        name: startTime
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.WalletTypeModel'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取钱包类型
      tags:
      - 钱包
    post:
      consumes:
      - application/json
      description: 新增钱包类型
      operationId: AddWalletType
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.AddWalletTypeReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 新增钱包类型
      tags:
      - 钱包
    put:
      consumes:
      - application/json
      description: 修改钱包类型
      operationId: UpdateWalletType
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 属性说明请在对应model中查看
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateWalletTypeReq'
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 修改钱包类型
      tags:
      - 钱包
  /api/admin/v1/wallet/type/all:
    get:
      consumes:
      - application/json
      description: 获取所有钱包类型
      operationId: GetAllWalletType
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: data的属性说明请在对应model中查看
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.WalletTypeModel'
                  type: array
              type: object
        "400":
          description: code为400 参数输入错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: code为401 token未带上
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: code为500 服务端内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取所有钱包类型
      tags:
      - 钱包
  /v1/lottery/address:
    put:
      consumes:
      - application/json
      description: 管理员为用户更新实物奖品的收货地址
      operationId: UpdateLotteryAddress
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 地址信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_secret-pr_go-server-template_internal_lottery_application_dto.UpdateAddressReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新收货地址
      tags:
      - 抽奖管理
  /v1/lottery/records:
    get:
      consumes:
      - application/json
      description: 获取中奖记录列表，支持分页和条件筛选
      operationId: GetLotteryRecords
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 收货地址筛选（支持模糊查询）
        in: query
        name: address
        type: string
      - description: 收货人姓名筛选（支持模糊查询）
        in: query
        name: consignee
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 收货人电话筛选（支持模糊查询）
        in: query
        name: phone
        type: string
      - description: 奖品ID筛选
        in: query
        name: prizeId
        type: string
      - description: 奖品名称筛选（支持模糊查询）
        in: query
        name: prizeName
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 发货状态筛选（0:未发货, 1:已发货, 2:已签收）
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.PageRes-dto_LotteryRecordDTO'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.LotteryRecordDTO'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取中奖记录
      tags:
      - 抽奖管理
  /v1/lottery/shipping/{recordId}:
    put:
      consumes:
      - application/json
      description: 管理员将实物奖品标记为已发货
      operationId: Shipping
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 中奖记录ID
        in: path
        name: recordId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 管理员发货
      tags:
      - 抽奖管理
  /v1/order:
    get:
      consumes:
      - application/json
      description: 获取订单列表
      operationId: GetOrderList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - in: query
        name: end_time
        type: integer
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - in: query
        name: start_time
        type: integer
      - in: query
        name: status
        type: integer
      - in: query
        name: type
        type: integer
      - in: query
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.PageRes-dto_OrderDTO'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.OrderDTO'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取订单列表
      tags:
      - 订单管理
  /v1/order/{orderNo}:
    get:
      consumes:
      - application/json
      description: 获取订单详情
      operationId: GetOrder
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 订单号
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.OrderDTO'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取订单详情
      tags:
      - 订单管理
  /v1/order/{orderNo}/refund:
    put:
      consumes:
      - application/json
      description: 退款
      operationId: RefundOrder
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 订单号
        in: path
        name: orderNo
        required: true
        type: string
      - description: 退款参数
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.RefundOrderReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 退款
      tags:
      - 订单管理
  /v1/order/cancel:
    put:
      consumes:
      - application/json
      description: 取消订单
      operationId: CancelOrder
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 订单号
        in: path
        name: orderNo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 取消订单
      tags:
      - 订单管理
  /v1/order/exchange/{id}/confirm:
    put:
      consumes:
      - application/json
      description: 确认兑换订单
      operationId: ConfirmExchangeOrder
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 订单号
        in: path
        name: orderNo
        required: true
        type: string
      - description: 确认参数
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.ConfirmExchangeOrderReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 确认兑换订单
      tags:
      - 订单管理
  /v1/order/recharge/{id}/confirm:
    put:
      consumes:
      - application/json
      description: 确认充值订单
      operationId: ConfirmRechargeOrder
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 订单号
        in: path
        name: orderNo
        required: true
        type: string
      - description: 确认参数
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.ConfirmRechargeOrderReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 确认充值订单
      tags:
      - 订单管理
  /v1/order/status:
    put:
      consumes:
      - application/json
      description: 更新订单状态
      operationId: UpdateOrderStatus
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 订单号
        in: path
        name: orderNo
        required: true
        type: string
      - description: 更新状态参数
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateOrderStatusReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新订单状态
      tags:
      - 订单管理
  /v1/rule-engine/category:
    get:
      consumes:
      - application/json
      description: 分页获取规则引擎分类列表
      operationId: GetRuleCategoryList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 业务类型
        in: query
        name: businessType
        type: string
      - description: 分类编码
        in: query
        name: code
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 分类名称
        in: query
        name: name
        type: string
      - description: 父分类ID
        in: query
        name: parentId
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 状态
        in: query
        name: status
        type: integer
      - description: 分类类型
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 分类列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.PageRes-github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto_CategoryDTO'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto.CategoryDTO'
                        type: array
                    type: object
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取规则引擎分类列表
      tags:
      - 规则引擎
    post:
      consumes:
      - application/json
      description: 创建新规则引擎分类
      operationId: CreateRuleCategory
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_command.CreateCategoryCommand'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 创建规则引擎分类
      tags:
      - 规则引擎
    put:
      consumes:
      - application/json
      description: 更新规则引擎分类基本信息
      operationId: UpdateRuleCategory
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_command.UpdateCategoryCommand'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新规则引擎分类信息
      tags:
      - 规则引擎
  /v1/rule-engine/category/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定规则引擎分类
      operationId: DeleteRuleCategory
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除规则引擎分类
      tags:
      - 规则引擎
    get:
      consumes:
      - application/json
      description: 获取指定规则引擎分类的详细信息
      operationId: GetRuleCategoryInfo
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 分类信息
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto.CategoryDTO'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取规则引擎分类信息
      tags:
      - 规则引擎
  /v1/rule-engine/category/by-business-type:
    get:
      consumes:
      - application/json
      description: 根据业务类型获取分类列表
      operationId: GetRuleCategoriesByBusinessType
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 业务类型
        in: query
        name: businessType
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 分类列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto.CategoryDTO'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 根据业务类型获取分类
      tags:
      - 规则引擎
  /v1/rule-engine/category/by-type:
    get:
      consumes:
      - application/json
      description: 根据分类类型获取分类列表
      operationId: GetRuleCategoriesByType
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类类型
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 分类列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto.CategoryDTO'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 根据分类类型获取分类
      tags:
      - 规则引擎
  /v1/rule-engine/category/status:
    put:
      consumes:
      - application/json
      description: 更新规则引擎分类状态（启用/禁用）
      operationId: UpdateRuleCategoryStatus
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 状态信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_command.UpdateCategoryStatusCommand'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新规则引擎分类状态
      tags:
      - 规则引擎
  /v1/rule-engine/rule:
    get:
      consumes:
      - application/json
      description: 分页获取规则列表
      operationId: GetRuleList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 业务类型
        in: query
        name: businessType
        type: string
      - description: 分类ID
        in: query
        name: categoryId
        type: string
      - description: 规则编码
        in: query
        name: code
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 规则名称
        in: query
        name: name
        type: string
      - description: 作用域
        in: query
        name: scope
        type: string
      - description: 作用域ID
        in: query
        name: scopeId
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 状态
        in: query
        name: status
        type: integer
      - description: 模板ID
        in: query
        name: templateId
        type: string
      - description: 触发条件
        in: query
        name: trigger
        type: string
      - description: 规则类型
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 规则列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.PageRes-dto_RuleDTO'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.RuleDTO'
                        type: array
                    type: object
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取规则列表
      tags:
      - 规则引擎
    post:
      consumes:
      - application/json
      description: 创建新规则
      operationId: CreateRule
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 规则信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/command.CreateRuleCommand'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 创建规则
      tags:
      - 规则引擎
    put:
      consumes:
      - application/json
      description: 更新规则基本信息
      operationId: UpdateRule
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 规则信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/command.UpdateRuleCommand'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新规则信息
      tags:
      - 规则引擎
  /v1/rule-engine/rule/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定规则
      operationId: DeleteRule
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除规则
      tags:
      - 规则引擎
    get:
      consumes:
      - application/json
      description: 获取指定规则的详细信息
      operationId: GetRuleInfo
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 规则信息
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/dto.RuleDTO'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取规则信息
      tags:
      - 规则引擎
  /v1/rule-engine/rule/by-category:
    get:
      consumes:
      - application/json
      description: 根据分类获取规则列表
      operationId: GetRulesByCategory
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类ID
        in: query
        name: categoryId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 规则列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.RuleDTO'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 根据分类获取规则
      tags:
      - 规则引擎
  /v1/rule-engine/rule/by-type:
    get:
      consumes:
      - application/json
      description: 根据类型获取规则列表
      operationId: GetRulesByType
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 规则类型
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 规则列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.RuleDTO'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 根据类型获取规则
      tags:
      - 规则引擎
  /v1/rule-engine/rule/enabled:
    get:
      consumes:
      - application/json
      description: 获取所有启用的规则列表
      operationId: GetEnabledRules
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 业务类型
        in: query
        name: businessType
        type: string
      - description: 分类ID
        in: query
        name: categoryId
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 规则名称
        in: query
        name: name
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 触发条件
        in: query
        name: trigger
        type: string
      - description: 规则类型
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 规则列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.PageRes-dto_RuleDTO'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/dto.RuleDTO'
                        type: array
                    type: object
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取启用的规则列表
      tags:
      - 规则引擎
  /v1/rule-engine/rule/status:
    put:
      consumes:
      - application/json
      description: 更新规则状态（启用/禁用）
      operationId: UpdateRuleStatus
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 状态信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/command.UpdateRuleStatusCommand'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新规则状态
      tags:
      - 规则引擎
  /v1/rule-engine/template:
    get:
      consumes:
      - application/json
      description: 分页获取规则模板列表
      operationId: GetRuleTemplateList
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类ID
        in: query
        name: categoryId
        type: string
      - description: 模板编码
        in: query
        name: code
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 模板名称
        in: query
        name: name
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 状态
        in: query
        name: status
        type: integer
      - description: 模板类型
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 模板列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.PageRes-github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto_TemplateDTO'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto.TemplateDTO'
                        type: array
                    type: object
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取规则模板列表
      tags:
      - 规则引擎
    post:
      consumes:
      - application/json
      description: 创建新规则模板
      operationId: CreateRuleTemplate
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 模板信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_command.CreateTemplateCommand'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 创建规则模板
      tags:
      - 规则引擎
    put:
      consumes:
      - application/json
      description: 更新规则模板基本信息
      operationId: UpdateRuleTemplate
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 模板信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_command.UpdateTemplateCommand'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新规则模板信息
      tags:
      - 规则引擎
  /v1/rule-engine/template/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定规则模板
      operationId: DeleteRuleTemplate1
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 模板ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 删除规则模板
      tags:
      - 规则引擎
    get:
      consumes:
      - application/json
      description: 获取指定规则模板的详细信息
      operationId: GetRuleTemplateInfo
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 模板ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 模板信息
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto.TemplateDTO'
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取规则模板信息
      tags:
      - 规则引擎
  /v1/rule-engine/template/by-category:
    get:
      consumes:
      - application/json
      description: 根据分类获取模板列表
      operationId: GetRuleTemplatesByCategory
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类ID
        in: query
        name: categoryId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 模板列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto.TemplateDTO'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 根据分类获取模板
      tags:
      - 规则引擎
  /v1/rule-engine/template/by-type:
    get:
      consumes:
      - application/json
      description: 根据类型获取模板列表
      operationId: GetRuleTemplatesByType
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 模板类型
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 模板列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto.TemplateDTO'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 根据类型获取模板
      tags:
      - 规则引擎
  /v1/rule-engine/template/enabled:
    get:
      consumes:
      - application/json
      description: 获取所有启用的规则模板列表
      operationId: GetEnabledRuleTemplates
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类ID
        in: query
        name: categoryId
        type: string
      - description: 模板编码
        in: query
        name: code
        type: string
      - description: 页码，从1开始
        in: query
        name: current
        type: integer
      - description: 模板名称
        in: query
        name: name
        type: string
      - description: 页码大小，最大100
        in: query
        name: size
        type: integer
      - description: 模板类型
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 模板列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.PageRes-github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto_TemplateDTO'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto.TemplateDTO'
                        type: array
                    type: object
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取启用的规则模板列表
      tags:
      - 规则引擎
  /v1/rule-engine/template/enabled/all:
    get:
      consumes:
      - application/json
      description: 获取分类下所有启用模板
      operationId: GetAllEnabledRuleTemplatesByCategory
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分类ID
        in: query
        name: categoryId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 模板列表
          schema:
            allOf:
            - $ref: '#/definitions/base_info.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_dto.TemplateDTO'
                  type: array
              type: object
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 获取分类下所有启用模板
      tags:
      - 规则引擎
  /v1/rule-engine/template/status:
    put:
      consumes:
      - application/json
      description: 更新规则模板状态（启用/禁用）
      operationId: UpdateRuleTemplateStatus
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 状态信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/github_com_secret-pr_go-server-template_framework_models_rule_engine_application_command.UpdateTemplateStatusCommand'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/base_info.Success'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/base_info.Swagger400Resp'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/base_info.Swagger401Resp'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/base_info.Swagger500Resp'
      summary: 更新规则模板状态
      tags:
      - 规则引擎
schemes:
- http
swagger: "2.0"
